{
  "hash": "fffe4bc5b16ae255092c4784c14606ef",
  "result": {
    "markdown": "---\ntitle: \"Introduction to `ggplot2` - 03\"\nsubtitle: \"More geoms, faceting plots, and adding labels\"\nauthor:\n  - \"Jessica Cooperstone\"\ndate: \"2025-01-28\"\ncategories: [ggplot2, dataviz, plotting, tidyverse]\ntitle-block-banner: false\nimage: img/ggplot2_exploratory.png\nalttext: \"A group of fuzzy round monsters with binoculars, backpacks and guide books looking up a graphs flying around with wings (like birders, but with exploratory data visualizations). Stylized text reads “ggplot2: visual data exploration.”\"\n---\n\n\n# Introduction\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Figure from [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/ggplot2_exploratory.png){fig-align='center' fig-alt='A group of fuzzy round monsters with binoculars, backpacks and guide books looking up a graphs flying around with wings (like birders, but with exploratory data visualizations). Stylized text reads “ggplot2: visual data exploration.”' width=70%}\n:::\n:::\n\n\nWe have spent the last two Code Club sessions talking about plotting with [`ggplot2`](https://ggplot2.tidyverse.org/). We have gone through:\n\n- [Code structure, data, aesthetic mappings, and some geoms](https://osu-codeclub.github.io/posts/S09E01_ggplot_01/)\n- [Changing colors ad checking accessibility](https://osu-codeclub.github.io/posts/S09E02_ggplot_02/)\n\nThis week, we will go over:\n\n- Additional geoms\n- Creating a faceted plot\n- Adding labels\n\n## Loading packages and data\n\nThe first thing we will do is load the `tidyverse` so we can use the functions it contains.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n\nWe are going to continue to use the `penguins` dataset we've been working with for the last couple of weeks. Let's load that data so we can use it.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n:::\n\n\nWe can also take a \"glimpse\" at our data with the function `glimpse()` to remind ourselves of what data is contained within `penguins`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n:::\n\n\n# More geoms\n\nSo far we've focused really on scatterplots (using `geom_point()`), so let's try some other plot types.\n\nWhat if we want to see what the body mass of penguins looks like on different islands? We can do that using a variety of different geoms.\n\n## Bar plot (be wary!)\n\nIf we want to see what the average body mass is per island, we need to either:\n\n- calculate a mean, and then plot it\n- use a function that calculates the mean for us\n\nCalculating a mean manually, then plotting:\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculating the mean body mass for each island\npenguins |> \n  summarize(mean_body_mass = mean(body_mass_g, \n                                  na.rm = TRUE), # remove missing values\n            .by = island) # summarize by island\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  island    mean_body_mass\n  <fct>              <dbl>\n1 Torgersen          3706.\n2 Biscoe             4716.\n3 Dream              3713.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# then plotting\npenguins |> \n  summarize(mean_body_mass = mean(body_mass_g, \n                                  na.rm = TRUE), # remove missing values\n            .by = island) |> # summarize by island\n  ggplot(aes(x = island, y = mean_body_mass)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nSee how this is different from passing. your data directly to `geom_col()`? Pay careful attention to the y-axis values.\n\n::: {.cell}\n\n```{.r .cell-code}\n# this is wrong\n# do not do this\npenguins |> \n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_col()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_col()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nIf you don't want to bother with the pre-calculation, you can use the function [`stat_summary()`](https://ggplot2.tidyverse.org/reference/stat_summary.html) which will pre-calculate the mean for you, and plot via the geom of your choice.\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = island, y = body_mass_g)) +\n  stat_summary(geom  = \"col\") # geom should be column\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_summary()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNo summary function supplied, defaulting to `mean_se()`\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Boxplot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Figure from [Allison Horst](https://github.com/allisonhorst/stats-illustrations/blob/main/other-stats-artwork/summary_statistics.png)](img/summary_statistics.png){fig-align='center' fig-alt='A cartoon showing a clip art style bar graph, on the left where all the data point dots are held at the bottom by a net, and one on the right where the fidelity of the datapoints are shown. The center says \\'are your summary statistics hiding something interesting?\\'' width=70%}\n:::\n:::\n\n\nThere is rarely a situation where a bar plot wouldn't be improved by turning it into a boxplot. A boxplot allows us to see the distribution of our data (instead of just the mean). Lots can be hiding when you summarize before plotting!\n\nWe can make a boxplot simply by using [`geom_boxplot()`](https://ggplot2.tidyverse.org/reference/geom_boxplot.html).\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWe can supplement our boxplot with all our actual data too, as that might help us see trends in our data. This is a special type of `geom_point()` called `geom_jitter()`, which takes your data points and puts them, in this case, on top of your boxplot.\n\nHere I will color the points by `sex` so we can see what that effect is.\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_boxplot() +\n  geom_jitter(aes(color = sex))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Practice\nWe are going to try looking at some new geoms. Create a plot that shows you the distribution of value for flipper length across all the penguins.\n\n<details>\n\n<summary>Need a hint?</summary>\n\nTake a look at the [`ggplot` cheatsheet](https://rstudio.github.io/cheatsheets/data-visualization.pdf) and pick a geom that you think would be good for this data that is one continuous variable.\n\n</details>\n\n<details>\n\n<summary>Need another hint?</summary>\n\nTry [`geom_density()`](https://ggplot2.tidyverse.org/reference/geom_density.html) or [`geom_histogram()`](https://ggplot2.tidyverse.org/reference/geom_histogram.html). Keep in mind that when you have one continuous variable, count gets mapped to `y` and this happens automatically.\n\n</details>\n\n<details>\n\n<summary>Click for the solution</summary>\n\nA density plot:\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nA histogram, you can play around with `bins = ` and `binwidth = ` to make the plot look how you want:\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = flipper_length_mm)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n</details>\n\n# Facets\n\nFaceting allows to create small multiples of plots, enabling the easy comparison across the entirety of your data. A benefit of plots like this is they are all structured the same way, so once you understand one, you can begin to look at trends across groups/treatments/conditions simply and easily.\n\n\nWhat if we want to see the distribution of body mass across penguins, by both islands and sex? Facets can help with this.\n\nThere are two faceting functions:\n\n* [`facet_wrap`](https://ggplot2.tidyverse.org/reference/facet_wrap.html): allows to  lay out your facets in a wrapped type. You can use `facet_wrap` if you have 1 variable you'd like to facet on.\n* [`facet_grid`](https://ggplot2.tidyverse.org/reference/facet_grid.html): allows you to lay out your facets in a grid. You can use `facet_grid` if you have 1 or 2 variables you'd like to facet on.\n\nLet's try faceting by `species` first.\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_boxplot() +\n  facet_wrap(vars(species))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nWe can also facet by both `species` and `sex` - let's try that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  drop_na(island, body_mass_g, species, sex) |> # remove missing values\n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_boxplot() +\n  facet_grid(rows = vars(sex), cols = vars(species))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nIf we prefer to be able to compare by `sex` more easily, we can switch the order of rows and cols.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  drop_na(island, body_mass_g, species, sex) |> # remove missing values\n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_boxplot() +\n  facet_grid(rows = vars(species), cols = vars(sex))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThe default in both `facet_wrap` and `facet_grid` are for the x and y-axis to be fixed and constant among all the plots. This is often what you want to take advance of the comparisons between small multiples, but this is something you can change if you want. You can adjust the scales within facets to:\n\n* `scales = \"fixed\"`: both the x- and y-axes are fixed for all plots to be the same (this is the default)\n* `scales = \"free\"`: both the x- and y-axes are set per plot\n* `scales = \"free_x\"`: the x-axis scales are free between plots\n* `scales = \"free_y\"`: the y-axis scales are free between plots\n\n## Practice\n\nCreate a faceted plot for different penguins species that shows the relationship between flipper length and bill length. Color your points by sex. Remove any missing values.\n\n<details>\n\n<summary>Need a hint?</summary>\n\nTry using the variables `flipper_length`, `bill_length_mm`, `species` and `sex`. Try faceting by `species` and coloring by `sex`. You can drop missing values with the function `drop_na()`.\n\n</details>\n\n<details>\n\n<summary>Click for the solution</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  drop_na() |> \n  ggplot(aes(x = flipper_length_mm, y = bill_length_mm, color = sex)) +\n  geom_point() + \n  facet_wrap(vars(species))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n</details>\n\nTake your faceted plot and add a linear line showing the relationship flipper length and bill length for each species, by sex.\n\n<details>\n\n<summary>Need a hint?</summary>\n\nAdd another layer with `geom_smooth()`. If you want a linear line, you can set `method = \"lm\"`.\n\n</details>\n\n<details>\n\n<summary>Click for the solution</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  drop_na() |> \n  ggplot(aes(x = flipper_length_mm, y = bill_length_mm, color = sex)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  facet_wrap(vars(species))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n</details>\n\n# Labels\n\nHaving good labels helps your reader (and you, when you come back to the plot in the future) understand what its all about. \n\nIn the [`labs()`](https://ggplot2.tidyverse.org/reference/labs.html) function, you can indicate:\n\n* `x` for the x-axis label\n* `y` for the y-axis label\n* `title` for a title\n* `subtitle` for a subtitle underneath your title\n* `caption` for a caption\n\nLet's take a plot we worked on and adjust the labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  drop_na(island, body_mass_g, species, sex) |> # remove missing values\n  ggplot(aes(x = island, y = body_mass_g)) +\n  geom_boxplot() +\n  facet_grid(rows = vars(sex), cols = vars(species)) +\n  labs(x = \"Island\",\n       y = \"Body mass (g)\",\n       title = \"Penguin body mass by island and species\",\n       subtitle = \"Data collected from LTER, Antarctica in 2007/08\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## Practice\n\nTake the final plot from the last series of exercises and add some more descriptive labels for x, y, and a title.\n\n<details>\n\n<summary>Need a hint?</summary>\n\nUse `labs()` and set `x`, `y`, and `title`. You can also add others.\n\n</details>\n\n<details>\n\n<summary>Click for the solution</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  drop_na() |> \n  ggplot(aes(x = flipper_length_mm, y = bill_length_mm, color = sex)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  facet_wrap(vars(species)) +\n  labs(x = \"Flipper length (mm)\",\n       y = \"Bill length (mm)\",\n       color = \"\", # remove the legend title, could also rename this way\n       title = \"Relationship between penguin flipper and bill length\",\n       subtitle = \"Data collected from LTER, Antarctica\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n</details>",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}