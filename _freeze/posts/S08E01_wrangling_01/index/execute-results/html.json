{
  "hash": "d1cd4029a4c54064cca421e32f366921",
  "result": {
    "markdown": "---\ntitle: \"Data wrangling: more on `filter()` and `select()`\"\nauthor:\n  - \"Jessica Cooperstone\"\ndate: \"2024-08-26\"\ncategories: [r-basics, tidyverse]\ntitle-block-banner: false\nimage: img/go-wrangling.png\nknitr:\n  opts_chunk:\n    out.width: \"85%\"\n    class-output: styled-output\n    fig.align: 'center'\n---\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n------------------------------------------------------------------------\n\n![Artwork by [\\@allison_horst](https://twitter.com/allison_horst)](img/go-wrangling.png)\n\n# Introduction\n\nWe are going to start off this semester of code club with a series of sessions on how to \"wrangle\" your data. It can be a struggle to get data into a format that is amenable for analysis, so we will be going through a series of functions and approaches that will get you more comfortable with manipulating your data.\n\nIf you don't have R and RStudio on your computer, you can find instructions for installation [here](https://osu-codeclub.github.io/pages/setup.html). You can also find some additional introductory material on getting set up in RStudio [here](https://osu-codeclub.github.io/posts/S07E01_basics_01/).\n\n## Load libraries\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## Data\n\nWe are going to use data from [The World Factbook](https://www.cia.gov/the-world-factbook/), put together by the CIA to \"provides basic intelligence on the history, people, government, economy, energy, geography, environment, communications, transportation, military, terrorism, and transnational issues for 265 world entities.\" I thought this data would give us some opportunities to flex our R skills, and learn a bit about the world.\n\nThe data we are going to download can be found [here](https://www.cia.gov/the-world-factbook/field/population/country-comparison/), though I have saved the file, added it to our Code Club Github, and included some code below for you to download it.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndownload.file(\n  url = \"https://raw.githubusercontent.com/osu-codeclub/osu-codeclub.github.io/main/posts/S08E01_wrangling_01/data/factbook-2015.csv\",\n  destfile = \"factbook_download_2015.csv\"\n)\n```\n:::\n\nYou should now see the file \"factbook_download_2015.csv\" in your working directory.\n\nWe can read it in using the tidyverse function from the [`readr`](https://readr.tidyverse.org/index.html) package called [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.html).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 <- read_csv(\"factbook_download_2015.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 217 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country Name, Country Code\ndbl (51): Population, total, Population growth (annual %), Surface area (sq....\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\nLet's get a better handle on this data. We can use the function [`glimpse()`](https://dplyr.tidyverse.org/reference/glimpse.html) to get a \"glimpse\" at our data.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglimpse(factbook_2015)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\nRows: 217\nColumns: 53\n$ `Country Name`                                                                                     <chr> …\n$ `Country Code`                                                                                     <chr> …\n$ `Population, total`                                                                                <dbl> …\n$ `Population growth (annual %)`                                                                     <dbl> …\n$ `Surface area (sq. km)`                                                                            <dbl> …\n$ `Poverty headcount ratio at national poverty lines (% of population)`                              <dbl> …\n$ `GNI, Atlas method (current US$)`                                                                  <dbl> …\n$ `GNI per capita, Atlas method (current US$)`                                                       <dbl> …\n$ `GNI, PPP (current international $)`                                                               <dbl> …\n$ `GNI per capita, PPP (current international $)`                                                    <dbl> …\n$ `Income share held by lowest 20%`                                                                  <dbl> …\n$ `Life expectancy at birth, total (years)`                                                          <dbl> …\n$ `Fertility rate, total (births per woman)`                                                         <dbl> …\n$ `Adolescent fertility rate (births per 1,000 women ages 15-19)`                                    <dbl> …\n$ `Contraceptive prevalence, any method (% of married women ages 15-49)`                             <dbl> …\n$ `Births attended by skilled health staff (% of total)`                                             <dbl> …\n$ `Mortality rate, under-5 (per 1,000 live births)`                                                  <dbl> …\n$ `Prevalence of underweight, weight for age (% of children under 5)`                                <dbl> …\n$ `Immunization, measles (% of children ages 12-23 months)`                                          <dbl> …\n$ `Primary completion rate, total (% of relevant age group)`                                         <dbl> …\n$ `School enrollment, secondary (% gross)`                                                           <dbl> …\n$ `School enrollment, primary and secondary (gross), gender parity index (GPI)`                      <dbl> …\n$ `Prevalence of HIV, total (% of population ages 15-49)`                                            <dbl> …\n$ `Forest area (sq. km)`                                                                             <dbl> …\n$ `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` <dbl> …\n$ `Energy use (kg of oil equivalent per capita)`                                                     <dbl> …\n$ `CO2 emissions (metric tons per capita)`                                                           <dbl> …\n$ `Electric power consumption (kWh per capita)`                                                      <dbl> …\n$ `GDP (current US$)`                                                                                <dbl> …\n$ `GDP growth (annual %)`                                                                            <dbl> …\n$ `Inflation, GDP deflator (annual %)`                                                               <dbl> …\n$ `Agriculture, forestry, and fishing, value added (% of GDP)`                                       <dbl> …\n$ `Industry (including construction), value added (% of GDP)`                                        <dbl> …\n$ `Exports of goods and services (% of GDP)`                                                         <dbl> …\n$ `Imports of goods and services (% of GDP)`                                                         <dbl> …\n$ `Gross capital formation (% of GDP)`                                                               <dbl> …\n$ `Revenue, excluding grants (% of GDP)`                                                             <dbl> …\n$ `Start-up procedures to register a business (number)`                                              <dbl> …\n$ `Market capitalization of listed domestic companies (% of GDP)`                                    <dbl> …\n$ `Military expenditure (% of GDP)`                                                                  <dbl> …\n$ `Mobile cellular subscriptions (per 100 people)`                                                   <dbl> …\n$ `High-technology exports (% of manufactured exports)`                                              <dbl> …\n$ `Merchandise trade (% of GDP)`                                                                     <dbl> …\n$ `Net barter terms of trade index (2015 = 100)`                                                     <dbl> …\n$ `External debt stocks, total (DOD, current US$)`                                                   <dbl> …\n$ `Total debt service (% of GNI)`                                                                    <dbl> …\n$ `Net migration`                                                                                    <dbl> …\n$ `Personal remittances, paid (current US$)`                                                         <dbl> …\n$ `Foreign direct investment, net inflows (BoP, current US$)`                                        <dbl> …\n$ `Net ODA received per capita (current US$)`                                                        <dbl> …\n$ `GDP per capita (current US$)`                                                                     <dbl> …\n$ `Foreign direct investment, net (BoP, current US$)`                                                <dbl> …\n$ `Inflation, consumer prices (annual %)`                                                            <dbl> …\n```\n:::\n:::\n\n\nWe see that `Country Name` and `Country Code` are character columns while the others are numeric (i.e., dbl).\n\nIt looks like we have some column names that don't use standard R practices (i.e., they have spaces, start with numbers), so let's use the function [`clean_names()`]() from the `janitor` package to clean those names up.\n\nFirst, install the package `janitor` if you don't have it.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages(\"janitor\")\n```\n:::\n\n\nThen we can load the package and clean up our column names.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# old column names\ncolnames(factbook_2015)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n [1] \"Country Name\"                                                                                    \n [2] \"Country Code\"                                                                                    \n [3] \"Population, total\"                                                                               \n [4] \"Population growth (annual %)\"                                                                    \n [5] \"Surface area (sq. km)\"                                                                           \n [6] \"Poverty headcount ratio at national poverty lines (% of population)\"                             \n [7] \"GNI, Atlas method (current US$)\"                                                                 \n [8] \"GNI per capita, Atlas method (current US$)\"                                                      \n [9] \"GNI, PPP (current international $)\"                                                              \n[10] \"GNI per capita, PPP (current international $)\"                                                   \n[11] \"Income share held by lowest 20%\"                                                                 \n[12] \"Life expectancy at birth, total (years)\"                                                         \n[13] \"Fertility rate, total (births per woman)\"                                                        \n[14] \"Adolescent fertility rate (births per 1,000 women ages 15-19)\"                                   \n[15] \"Contraceptive prevalence, any method (% of married women ages 15-49)\"                            \n[16] \"Births attended by skilled health staff (% of total)\"                                            \n[17] \"Mortality rate, under-5 (per 1,000 live births)\"                                                 \n[18] \"Prevalence of underweight, weight for age (% of children under 5)\"                               \n[19] \"Immunization, measles (% of children ages 12-23 months)\"                                         \n[20] \"Primary completion rate, total (% of relevant age group)\"                                        \n[21] \"School enrollment, secondary (% gross)\"                                                          \n[22] \"School enrollment, primary and secondary (gross), gender parity index (GPI)\"                     \n[23] \"Prevalence of HIV, total (% of population ages 15-49)\"                                           \n[24] \"Forest area (sq. km)\"                                                                            \n[25] \"Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\"\n[26] \"Energy use (kg of oil equivalent per capita)\"                                                    \n[27] \"CO2 emissions (metric tons per capita)\"                                                          \n[28] \"Electric power consumption (kWh per capita)\"                                                     \n[29] \"GDP (current US$)\"                                                                               \n[30] \"GDP growth (annual %)\"                                                                           \n[31] \"Inflation, GDP deflator (annual %)\"                                                              \n[32] \"Agriculture, forestry, and fishing, value added (% of GDP)\"                                      \n[33] \"Industry (including construction), value added (% of GDP)\"                                       \n[34] \"Exports of goods and services (% of GDP)\"                                                        \n[35] \"Imports of goods and services (% of GDP)\"                                                        \n[36] \"Gross capital formation (% of GDP)\"                                                              \n[37] \"Revenue, excluding grants (% of GDP)\"                                                            \n[38] \"Start-up procedures to register a business (number)\"                                             \n[39] \"Market capitalization of listed domestic companies (% of GDP)\"                                   \n[40] \"Military expenditure (% of GDP)\"                                                                 \n[41] \"Mobile cellular subscriptions (per 100 people)\"                                                  \n[42] \"High-technology exports (% of manufactured exports)\"                                             \n[43] \"Merchandise trade (% of GDP)\"                                                                    \n[44] \"Net barter terms of trade index (2015 = 100)\"                                                    \n[45] \"External debt stocks, total (DOD, current US$)\"                                                  \n[46] \"Total debt service (% of GNI)\"                                                                   \n[47] \"Net migration\"                                                                                   \n[48] \"Personal remittances, paid (current US$)\"                                                        \n[49] \"Foreign direct investment, net inflows (BoP, current US$)\"                                       \n[50] \"Net ODA received per capita (current US$)\"                                                       \n[51] \"GDP per capita (current US$)\"                                                                    \n[52] \"Foreign direct investment, net (BoP, current US$)\"                                               \n[53] \"Inflation, consumer prices (annual %)\"                                                           \n```\n:::\n\n```{.r .cell-code}\n# use clean_names and save over the current df factbook_2015\nfactbook_2015 <- clean_names(factbook_2015)\n\n# new column names\ncolnames(factbook_2015)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n [1] \"country_name\"                                                                                \n [2] \"country_code\"                                                                                \n [3] \"population_total\"                                                                            \n [4] \"population_growth_annual_percent\"                                                            \n [5] \"surface_area_sq_km\"                                                                          \n [6] \"poverty_headcount_ratio_at_national_poverty_lines_percent_of_population\"                     \n [7] \"gni_atlas_method_current_us\"                                                                 \n [8] \"gni_per_capita_atlas_method_current_us\"                                                      \n [9] \"gni_ppp_current_international\"                                                               \n[10] \"gni_per_capita_ppp_current_international\"                                                    \n[11] \"income_share_held_by_lowest_20_percent\"                                                      \n[12] \"life_expectancy_at_birth_total_years\"                                                        \n[13] \"fertility_rate_total_births_per_woman\"                                                       \n[14] \"adolescent_fertility_rate_births_per_1_000_women_ages_15_19\"                                 \n[15] \"contraceptive_prevalence_any_method_percent_of_married_women_ages_15_49\"                     \n[16] \"births_attended_by_skilled_health_staff_percent_of_total\"                                    \n[17] \"mortality_rate_under_5_per_1_000_live_births\"                                                \n[18] \"prevalence_of_underweight_weight_for_age_percent_of_children_under_5\"                        \n[19] \"immunization_measles_percent_of_children_ages_12_23_months\"                                  \n[20] \"primary_completion_rate_total_percent_of_relevant_age_group\"                                 \n[21] \"school_enrollment_secondary_percent_gross\"                                                   \n[22] \"school_enrollment_primary_and_secondary_gross_gender_parity_index_gpi\"                       \n[23] \"prevalence_of_hiv_total_percent_of_population_ages_15_49\"                                    \n[24] \"forest_area_sq_km\"                                                                           \n[25] \"water_productivity_total_constant_2015_us_gdp_per_cubic_meter_of_total_freshwater_withdrawal\"\n[26] \"energy_use_kg_of_oil_equivalent_per_capita\"                                                  \n[27] \"co2_emissions_metric_tons_per_capita\"                                                        \n[28] \"electric_power_consumption_k_wh_per_capita\"                                                  \n[29] \"gdp_current_us\"                                                                              \n[30] \"gdp_growth_annual_percent\"                                                                   \n[31] \"inflation_gdp_deflator_annual_percent\"                                                       \n[32] \"agriculture_forestry_and_fishing_value_added_percent_of_gdp\"                                 \n[33] \"industry_including_construction_value_added_percent_of_gdp\"                                  \n[34] \"exports_of_goods_and_services_percent_of_gdp\"                                                \n[35] \"imports_of_goods_and_services_percent_of_gdp\"                                                \n[36] \"gross_capital_formation_percent_of_gdp\"                                                      \n[37] \"revenue_excluding_grants_percent_of_gdp\"                                                     \n[38] \"start_up_procedures_to_register_a_business_number\"                                           \n[39] \"market_capitalization_of_listed_domestic_companies_percent_of_gdp\"                           \n[40] \"military_expenditure_percent_of_gdp\"                                                         \n[41] \"mobile_cellular_subscriptions_per_100_people\"                                                \n[42] \"high_technology_exports_percent_of_manufactured_exports\"                                     \n[43] \"merchandise_trade_percent_of_gdp\"                                                            \n[44] \"net_barter_terms_of_trade_index_2015_100\"                                                    \n[45] \"external_debt_stocks_total_dod_current_us\"                                                   \n[46] \"total_debt_service_percent_of_gni\"                                                           \n[47] \"net_migration\"                                                                               \n[48] \"personal_remittances_paid_current_us\"                                                        \n[49] \"foreign_direct_investment_net_inflows_bo_p_current_us\"                                       \n[50] \"net_oda_received_per_capita_current_us\"                                                      \n[51] \"gdp_per_capita_current_us\"                                                                   \n[52] \"foreign_direct_investment_net_bo_p_current_us\"                                               \n[53] \"inflation_consumer_prices_annual_percent\"                                                    \n```\n:::\n:::\n\n\nWhat if we want to see a complete list of our countries? We could run the following code to see that:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015$country_name\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n  [1] \"Afghanistan\"                    \"Albania\"                       \n  [3] \"Algeria\"                        \"American Samoa\"                \n  [5] \"Andorra\"                        \"Angola\"                        \n  [7] \"Antigua and Barbuda\"            \"Argentina\"                     \n  [9] \"Armenia\"                        \"Aruba\"                         \n [11] \"Australia\"                      \"Austria\"                       \n [13] \"Azerbaijan\"                     \"Bahamas, The\"                  \n [15] \"Bahrain\"                        \"Bangladesh\"                    \n [17] \"Barbados\"                       \"Belarus\"                       \n [19] \"Belgium\"                        \"Belize\"                        \n [21] \"Benin\"                          \"Bermuda\"                       \n [23] \"Bhutan\"                         \"Bolivia\"                       \n [25] \"Bosnia and Herzegovina\"         \"Botswana\"                      \n [27] \"Brazil\"                         \"British Virgin Islands\"        \n [29] \"Brunei Darussalam\"              \"Bulgaria\"                      \n [31] \"Burkina Faso\"                   \"Burundi\"                       \n [33] \"Cabo Verde\"                     \"Cambodia\"                      \n [35] \"Cameroon\"                       \"Canada\"                        \n [37] \"Cayman Islands\"                 \"Central African Republic\"      \n [39] \"Chad\"                           \"Channel Islands\"               \n [41] \"Chile\"                          \"China\"                         \n [43] \"Colombia\"                       \"Comoros\"                       \n [45] \"Congo, Dem. Rep.\"               \"Congo, Rep.\"                   \n [47] \"Costa Rica\"                     \"Cote d'Ivoire\"                 \n [49] \"Croatia\"                        \"Cuba\"                          \n [51] \"Curacao\"                        \"Cyprus\"                        \n [53] \"Czechia\"                        \"Denmark\"                       \n [55] \"Djibouti\"                       \"Dominica\"                      \n [57] \"Dominican Republic\"             \"Ecuador\"                       \n [59] \"Egypt, Arab Rep.\"               \"El Salvador\"                   \n [61] \"Equatorial Guinea\"              \"Eritrea\"                       \n [63] \"Estonia\"                        \"Ethiopia\"                      \n [65] \"Faroe Islands\"                  \"Fiji\"                          \n [67] \"Finland\"                        \"France\"                        \n [69] \"French Polynesia\"               \"Gabon\"                         \n [71] \"Gambia, The\"                    \"Georgia\"                       \n [73] \"Germany\"                        \"Ghana\"                         \n [75] \"Gibraltar\"                      \"Greece\"                        \n [77] \"Greenland\"                      \"Grenada\"                       \n [79] \"Guam\"                           \"Guatemala\"                     \n [81] \"Guinea\"                         \"Guinea-Bissau\"                 \n [83] \"Guyana\"                         \"Haiti\"                         \n [85] \"Honduras\"                       \"Hong Kong SAR, China\"          \n [87] \"Hungary\"                        \"Iceland\"                       \n [89] \"India\"                          \"Indonesia\"                     \n [91] \"Iran, Islamic Rep.\"             \"Iraq\"                          \n [93] \"Ireland\"                        \"Isle of Man\"                   \n [95] \"Israel\"                         \"Italy\"                         \n [97] \"Jamaica\"                        \"Japan\"                         \n [99] \"Jordan\"                         \"Kazakhstan\"                    \n[101] \"Kenya\"                          \"Kiribati\"                      \n[103] \"Korea, Dem. People's Rep.\"      \"Korea, Rep.\"                   \n[105] \"Kosovo\"                         \"Kuwait\"                        \n[107] \"Kyrgyz Republic\"                \"Lao PDR\"                       \n[109] \"Latvia\"                         \"Lebanon\"                       \n[111] \"Lesotho\"                        \"Liberia\"                       \n[113] \"Libya\"                          \"Liechtenstein\"                 \n[115] \"Lithuania\"                      \"Luxembourg\"                    \n[117] \"Macao SAR, China\"               \"North Macedonia\"               \n[119] \"Madagascar\"                     \"Malawi\"                        \n[121] \"Malaysia\"                       \"Maldives\"                      \n[123] \"Mali\"                           \"Malta\"                         \n[125] \"Marshall Islands\"               \"Mauritania\"                    \n[127] \"Mauritius\"                      \"Mexico\"                        \n[129] \"Micronesia, Fed. Sts.\"          \"Moldova\"                       \n[131] \"Monaco\"                         \"Mongolia\"                      \n[133] \"Montenegro\"                     \"Morocco\"                       \n[135] \"Mozambique\"                     \"Myanmar\"                       \n[137] \"Namibia\"                        \"Nauru\"                         \n[139] \"Nepal\"                          \"Netherlands\"                   \n[141] \"New Caledonia\"                  \"New Zealand\"                   \n[143] \"Nicaragua\"                      \"Niger\"                         \n[145] \"Nigeria\"                        \"Northern Mariana Islands\"      \n[147] \"Norway\"                         \"Oman\"                          \n[149] \"Pakistan\"                       \"Palau\"                         \n[151] \"Panama\"                         \"Papua New Guinea\"              \n[153] \"Paraguay\"                       \"Peru\"                          \n[155] \"Philippines\"                    \"Poland\"                        \n[157] \"Portugal\"                       \"Puerto Rico\"                   \n[159] \"Qatar\"                          \"Romania\"                       \n[161] \"Russian Federation\"             \"Rwanda\"                        \n[163] \"Samoa\"                          \"San Marino\"                    \n[165] \"Sao Tome and Principe\"          \"Saudi Arabia\"                  \n[167] \"Senegal\"                        \"Serbia\"                        \n[169] \"Seychelles\"                     \"Sierra Leone\"                  \n[171] \"Singapore\"                      \"Sint Maarten (Dutch part)\"     \n[173] \"Slovak Republic\"                \"Slovenia\"                      \n[175] \"Solomon Islands\"                \"Somalia\"                       \n[177] \"South Africa\"                   \"South Sudan\"                   \n[179] \"Spain\"                          \"Sri Lanka\"                     \n[181] \"St. Kitts and Nevis\"            \"St. Lucia\"                     \n[183] \"St. Martin (French part)\"       \"St. Vincent and the Grenadines\"\n[185] \"Sudan\"                          \"Suriname\"                      \n[187] \"Eswatini\"                       \"Sweden\"                        \n[189] \"Switzerland\"                    \"Syrian Arab Republic\"          \n[191] \"Tajikistan\"                     \"Tanzania\"                      \n[193] \"Thailand\"                       \"Timor-Leste\"                   \n[195] \"Togo\"                           \"Tonga\"                         \n[197] \"Trinidad and Tobago\"            \"Tunisia\"                       \n[199] \"Turkiye\"                        \"Turkmenistan\"                  \n[201] \"Turks and Caicos Islands\"       \"Tuvalu\"                        \n[203] \"Uganda\"                         \"Ukraine\"                       \n[205] \"United Arab Emirates\"           \"United Kingdom\"                \n[207] \"United States\"                  \"Uruguay\"                       \n[209] \"Uzbekistan\"                     \"Vanuatu\"                       \n[211] \"Venezuela, RB\"                  \"Viet Nam\"                      \n[213] \"Virgin Islands (U.S.)\"          \"West Bank and Gaza\"            \n[215] \"Yemen, Rep.\"                    \"Zambia\"                        \n[217] \"Zimbabwe\"                      \n```\n:::\n:::\n\n\n\n# Pick observations with `filter()`\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Figure from [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/filter.png){fig-align='center' fig-alt='Cartoon showing three fuzzy monsters either selecting or crossing out rows of a data table. If the type of animal in the table is “otter” and the site is “bay”, a monster is drawing a purple rectangle around the row. If those conditions are not met, another monster is putting a line through the column indicating it will be excluded. Stylized text reads “dplyr::filter() - keep rows that satisfy your conditions.” Learn more about dplyr::filter.' width=70%}\n:::\n:::\n\n\nSometimes you want to select observations (rows) based on values. To do this you use [`filter()`](https://dplyr.tidyverse.org/reference/filter.html). Try not to confuse this with `select()`.\n\n::: {.callout-note title=\"`select()` picks columns, while `filter()` picks rows.\"} \n:::\n\nThe function `filter()` will keep only observations that meet your filtering criteria.\n\nLet's filter for countries that have a population more than Ohio (11.76M).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  filter(population_total > 11760000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 73 × 53\n   country_name country_code population_total population_growth_annual_percent\n   <chr>        <chr>                   <dbl>                            <dbl>\n 1 Afghanistan  AFG                  33753499                            3.12 \n 2 Algeria      DZA                  39543154                            2.00 \n 3 Angola       AGO                  28127721                            3.62 \n 4 Argentina    ARG                  43131966                            1.08 \n 5 Australia    AUS                  23815995                            1.44 \n 6 Bangladesh   BGD                 157830000                            1.19 \n 7 Brazil       BRA                 205188205                            0.846\n 8 Burkina Faso BFA                  18718019                            2.97 \n 9 Cambodia     KHM                  15417523                            1.35 \n10 Cameroon     CMR                  23012646                            3.15 \n# ℹ 63 more rows\n# ℹ 49 more variables: surface_area_sq_km <dbl>,\n#   poverty_headcount_ratio_at_national_poverty_lines_percent_of_population <dbl>,\n#   gni_atlas_method_current_us <dbl>,\n#   gni_per_capita_atlas_method_current_us <dbl>,\n#   gni_ppp_current_international <dbl>,\n#   gni_per_capita_ppp_current_international <dbl>, …\n```\n:::\n:::\n\n\nIf we want to see the countries that also have an area that is less than the size of Ohio (116,098 km^2), we can also add that to our filter statement using the `&` operator.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  filter(population_total > 11760000 & surface_area_sq_km < 116098)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 4 × 53\n  country_name country_code population_total population_growth_annual_percent\n  <chr>        <chr>                   <dbl>                            <dbl>\n1 Guatemala    GTM                  15567419                            1.69 \n2 Korea, Rep.  KOR                  51014947                            0.527\n3 Netherlands  NLD                  16939923                            0.443\n4 Sri Lanka    LKA                  21336697                            0.457\n# ℹ 49 more variables: surface_area_sq_km <dbl>,\n#   poverty_headcount_ratio_at_national_poverty_lines_percent_of_population <dbl>,\n#   gni_atlas_method_current_us <dbl>,\n#   gni_per_capita_atlas_method_current_us <dbl>,\n#   gni_ppp_current_international <dbl>,\n#   gni_per_capita_ppp_current_international <dbl>,\n#   income_share_held_by_lowest_20_percent <dbl>, …\n```\n:::\n:::\n\n\nThere are four countries that have more people than Ohio in a space that is less than Ohio.\n\n## Practice\n\nHow many countries have negative annual population growth? This variable is called `population_growth_annual_percent`.\n\n<details><summary>Need a hint?</summary>\n\nTry to `filter` for `population_growth_annual_percent` < 0.\n\n</details>    \n\n\n<details><summary>Click for the solution</summary>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  filter(population_growth_annual_percent < 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 34 × 53\n   country_name           country_code population_total population_growth_annu…¹\n   <chr>                  <chr>                   <dbl>                    <dbl>\n 1 Albania                ALB                   2880703                   -0.291\n 2 American Samoa         ASM                     51368                   -1.64 \n 3 Armenia                ARM                   2878595                   -0.393\n 4 Bosnia and Herzegovina BIH                   3524324                   -1.32 \n 5 Bulgaria               BGR                   7177991                   -0.638\n 6 Croatia                HRV                   4203604                   -0.824\n 7 Greece                 GRC                  10820883                   -0.659\n 8 Greenland              GRL                     56114                   -0.322\n 9 Hungary                HUN                   9843028                   -0.238\n10 Isle of Man            IMN                     83593                   -0.362\n# ℹ 24 more rows\n# ℹ abbreviated name: ¹​population_growth_annual_percent\n# ℹ 49 more variables: surface_area_sq_km <dbl>,\n#   poverty_headcount_ratio_at_national_poverty_lines_percent_of_population <dbl>,\n#   gni_atlas_method_current_us <dbl>,\n#   gni_per_capita_atlas_method_current_us <dbl>,\n#   gni_ppp_current_international <dbl>, …\n```\n:::\n:::\n\n\nThere are 34 countries that have a negative annual growth rate in 2015.\n\n</details>    \n\n# Choose columns with `select()`\n\nOften you will want to pick only certain columns in your dataframe, and you can do this with the function [`select()`](https://dplyr.tidyverse.org/reference/select.html). You can pick columns generally by:\n\n-   their names\n-   their position \n-   characteristics of that column\n\nIf we want to know how the arguments to `select()` work, we can access the documentation material about the function.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n?select()\n```\n:::\n\n\nLet's first select columns by their names. Let's pick just the `country_name`, `population_total`, and `surface_area_sq_km`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  select(country_name, population_total, surface_area_sq_km)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 217 × 3\n   country_name        population_total surface_area_sq_km\n   <chr>                          <dbl>              <dbl>\n 1 Afghanistan                 33753499             652860\n 2 Albania                      2880703              28750\n 3 Algeria                     39543154            2381741\n 4 American Samoa                 51368                200\n 5 Andorra                        71746                470\n 6 Angola                      28127721            1246700\n 7 Antigua and Barbuda            89941                440\n 8 Argentina                   43131966            2780400\n 9 Armenia                      2878595              29740\n10 Aruba                         104257                180\n# ℹ 207 more rows\n```\n:::\n:::\n\n\nThose columns are also the 1st, 3rd, and 5th columns in our data frame, do we can select them by their indices, or by their location.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  select(1, 3, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 217 × 3\n   country_name        population_total surface_area_sq_km\n   <chr>                          <dbl>              <dbl>\n 1 Afghanistan                 33753499             652860\n 2 Albania                      2880703              28750\n 3 Algeria                     39543154            2381741\n 4 American Samoa                 51368                200\n 5 Andorra                        71746                470\n 6 Angola                      28127721            1246700\n 7 Antigua and Barbuda            89941                440\n 8 Argentina                   43131966            2780400\n 9 Armenia                      2878595              29740\n10 Aruba                         104257                180\n# ℹ 207 more rows\n```\n:::\n:::\n\n\nIn general I would recommend against this because its really hard to remember which column indices are which variables today, nevermind returning back to old code 1 year from now.\n\nWe can also select columns that are consecutive, using the `:` operator. Below I'm selecting the columns `country_name` through `population_growth_annual_percent`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  select(country_name:population_growth_annual_percent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 217 × 4\n   country_name        country_code population_total population_growth_annual_…¹\n   <chr>               <chr>                   <dbl>                       <dbl>\n 1 Afghanistan         AFG                  33753499                       3.12 \n 2 Albania             ALB                   2880703                      -0.291\n 3 Algeria             DZA                  39543154                       2.00 \n 4 American Samoa      ASM                     51368                      -1.64 \n 5 Andorra             AND                     71746                       0.174\n 6 Angola              AGO                  28127721                       3.62 \n 7 Antigua and Barbuda ATG                     89941                       0.787\n 8 Argentina           ARG                  43131966                       1.08 \n 9 Armenia             ARM                   2878595                      -0.393\n10 Aruba               ABW                    104257                       0.638\n# ℹ 207 more rows\n# ℹ abbreviated name: ¹​population_growth_annual_percent\n```\n:::\n:::\n\n\nWe can remove columns using the `!` operator:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  select(!country_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 217 × 52\n   country_name       population_total population_growth_an…¹ surface_area_sq_km\n   <chr>                         <dbl>                  <dbl>              <dbl>\n 1 Afghanistan                33753499                  3.12              652860\n 2 Albania                     2880703                 -0.291              28750\n 3 Algeria                    39543154                  2.00             2381741\n 4 American Samoa                51368                 -1.64                 200\n 5 Andorra                       71746                  0.174                470\n 6 Angola                     28127721                  3.62             1246700\n 7 Antigua and Barbu…            89941                  0.787                440\n 8 Argentina                  43131966                  1.08             2780400\n 9 Armenia                     2878595                 -0.393              29740\n10 Aruba                        104257                  0.638                180\n# ℹ 207 more rows\n# ℹ abbreviated name: ¹​population_growth_annual_percent\n# ℹ 48 more variables:\n#   poverty_headcount_ratio_at_national_poverty_lines_percent_of_population <dbl>,\n#   gni_atlas_method_current_us <dbl>,\n#   gni_per_capita_atlas_method_current_us <dbl>,\n#   gni_ppp_current_international <dbl>, …\n```\n:::\n:::\n\n\n\nWe can also select data based on its characteristics. We can select using selection helpers like:\n\n* [`everything()`](https://tidyselect.r-lib.org/reference/everything.html): picks all variables\n*  [`starts_with()`](https://tidyselect.r-lib.org/reference/starts_with.html): starts with some prefix\n* [`contains()`](https://tidyselect.r-lib.org/reference/starts_with.html): contains a specific string\n* [`where()`](https://tidyselect.r-lib.org/reference/where.html): selects columns where the statement given in the argument is TRUE\n\nFor example, we might want each column that has anything to do with gross domestic product, or gdp. We can select all of the columns which contain the string \"gdp\" in their name. I'm also going to add `country_name` so we know what we're working with.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  select(country_name, contains(\"gdp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 217 × 15\n   country_name     water_productivity_t…¹ gdp_current_us gdp_growth_annual_pe…²\n   <chr>                             <dbl>          <dbl>                  <dbl>\n 1 Afghanistan                       0.943    19134221645                  1.45 \n 2 Albania                          12.4      11386853113                  2.22 \n 3 Algeria                          20.9     187494000000                  3.2  \n 4 American Samoa                   NA          673000000                  3.15 \n 5 Andorra                          NA         2789881259                  1.43 \n 6 Angola                          128.       90496420507                  0.944\n 7 Antigua and Bar…                327.        1437755556                  1.45 \n 8 Argentina                        15.8     594749000000                  2.73 \n 9 Armenia                           3.23     10553337518                  3.20 \n10 Aruba                            NA         2962907263                 -0.624\n# ℹ 207 more rows\n# ℹ abbreviated names:\n#   ¹​water_productivity_total_constant_2015_us_gdp_per_cubic_meter_of_total_freshwater_withdrawal,\n#   ²​gdp_growth_annual_percent\n# ℹ 11 more variables: inflation_gdp_deflator_annual_percent <dbl>,\n#   agriculture_forestry_and_fishing_value_added_percent_of_gdp <dbl>,\n#   industry_including_construction_value_added_percent_of_gdp <dbl>, …\n```\n:::\n:::\n\n\nWe can also select all column that meet a certain predicate. For example, we can pick all of the column that are of the type character.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfactbook_2015 |> \n  select(where(is.character))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.styled-output}\n# A tibble: 217 × 2\n   country_name        country_code\n   <chr>               <chr>       \n 1 Afghanistan         AFG         \n 2 Albania             ALB         \n 3 Algeria             DZA         \n 4 American Samoa      ASM         \n 5 Andorra             AND         \n 6 Angola              AGO         \n 7 Antigua and Barbuda ATG         \n 8 Argentina           ARG         \n 9 Armenia             ARM         \n10 Aruba               ABW         \n# ℹ 207 more rows\n```\n:::\n:::\n\n\n\nYou can find lots of more selection helpers [here](https://dplyr.tidyverse.org/reference/select.html).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}