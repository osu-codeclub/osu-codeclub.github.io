{
  "hash": "c70bcedc8f75877cae635ce82c70351f",
  "result": {
    "markdown": "---\ntitle: \"Data wrangling: more on `filter()` and `select()`\"\nauthor:\n  - \"Jessica Cooperstone\"\ndate: \"2024-08-26\"\ncategories: [r-basics, tidyverse]\ntitle-block-banner: false\nimage: img/go-wrangling.png\n---\n\n::: {.cell}\n\n:::\n\n\n------------------------------------------------------------------------\n\n![Artwork by [\\@allison_horst](https://twitter.com/allison_horst)](img/go-wrangling.png)\n\n# Introduction\n\nWe are going to start off this semester of code club with a series of sessions on how to \"wrangle\" your data. It can be a struggle to get data into a format that is amenable for analysis, so we will be going through a series of functions and approaches that will get you more comfortable with manipulating your data.\n\nIf you don't have R and RStudio on your computer, you can find instructions for installation [here](https://osu-codeclub.github.io/pages/setup.html). You can also find some additional introductory material on getting set up in RStudio [here](https://osu-codeclub.github.io/posts/S07E01_basics_01/).\n\n## Load libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## Data\n\nWe are going to use data from [The World Factbook](https://www.cia.gov/the-world-factbook/), put together by the CIA to \"provides basic intelligence on the history, people, government, economy, energy, geography, environment, communications, transportation, military, terrorism, and transnational issues for 265 world entities.\" I thought this data would give us some opportunities to flex our R skills, and learn a bit about the world.\n\nThe data we are going to download can be found [here](https://www.cia.gov/the-world-factbook/field/population/country-comparison/), thoguh I have saved the file and included some code below for you to download it.\n\n\n# Pick observations with `filter()`\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Figure from [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/filter.png){fig-align='center' fig-alt='Cartoon showing three fuzzy monsters either selecting or crossing out rows of a data table. If the type of animal in the table is “otter” and the site is “bay”, a monster is drawing a purple rectangle around the row. If those conditions are not met, another monster is putting a line through the column indicating it will be excluded. Stylized text reads “dplyr::filter() - keep rows that satisfy your conditions.” Learn more about dplyr::filter.' width=70%}\n:::\n:::\n\n\nSometimes you want to select observations (rows) based on values. To do this you use [`filter()`](https://dplyr.tidyverse.org/reference/filter.html). Try not to confuse this with `select()`.\n\n::: {.callout-note title=\"`select()` picks columns, while `filter()` picks rows.\"} \n:::\n\nThe function `filter()` will keep only observations that meet your filtering criteria.\n\n# Choose columns with `select()`\n\nOften you will want to pick only certain columns in your dataframe, and you can do this with the function [`select()`](https://dplyr.tidyverse.org/reference/select.html). You can pick columns by:\n\n-   their names\n-   their position (i.e., index)\n-   characteristics of that column\n\nIf we want to know how the arguments to `select()` work, we can access the documentation material about the function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?select()\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}