{
  "hash": "8d682a8dc96271ffdd5deb8b3759fb4c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quarto website 5: modifying your site\"\nsubtitle: Making a fancy about page, drop down menu bars, and some (S)CSS styling.\nauthor:\n  - \"Jessica Cooperstone\"\ndate: \"2023-10-02\"\ncategories: [website, git]\ntitle-block-banner: false\nimage: img/quarto-cartoon.png\nalttext: \"A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto. Artwork from Hello, Quarto keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst\"\n---\n\n\n------------------------------------------------------------------------\n\n<br>\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/quarto-cartoon.png){fig-align='center' fig-alt='A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto. Artwork from Hello, Quarto keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst' width=70%}\n:::\n:::\n\n\nArtwork from [\"Hello, Quarto\"](https://mine.quarto.pub/hello-quarto/) keynote by [Julia Lowndes](https://jules32.github.io/) and [Mine Çetinkaya-Rundel](https://mine-cr.com/), presented at RStudio Conference 2022. Illustrated by [Allison Horst](https://allisonhorst.com/allison-horst).\"\n\n# Introduction\n\nToday we are going to continue customizing our website by:\n\n1. Making a fancy about page\n2. Learning how to make multi-level drop down menu headers\n3. Changing our website themeing in `_quarto.yml`\n4. Doing some light (S)CSS styling to change the visuals of our site\n\nThen, we will push our changes to GitHub using GitHub Desktop. But first: \n\n<div class=\"callout callout-success\">\n  <h4>Are there other things you want to learn how to do with your website?</h4>\n  <p>Please share!</p>\n</div>\n\nA good way to see what is possible to do with your website is to browse through some other people's sites. There is a Quarto website gallery [here](https://quarto.org/docs/gallery/#websites). Just like people can access the source code on your website, you can often do the same for others. This means if you see a feature you like, you can go into their website code and try and figure out how its done.\n\n# Updating our About page\n\nBecause many people who have a Quarto website will have an About page, there are some special, nicely formatted templates which you can use. You can learn more about fancy about pages [here](https://quarto.org/docs/websites/website-about.html), inclduing seeing what the different templates look like.\n\nWe are going to practie with our Code Club [practice-website](https://osu-codeclub.github.io/practice-website/).\n\nFirst, let's set one of the about templates in the YAML of our `about.qmd` file. I am going to start with `jolla`.\n\n```yaml\ntitle: \"About me\"\nabout:\n  template: jolla\n  image: name_of_image.jpg\n```\n\nBefore we render this page, we need to make sure the image we want to appear in this about page is in the home directory of your website. If you want to keep all your images in a subfolder so they're not just floating around loose, you can. And then your YAML will look like this:\n\n```yaml\ntitle: \"About me\"\nabout:\n  template: jolla # could also use trestles, solana, marquee, broadside\n  image: img/name_of_image.jpg\n```\n\nIf you want to use some of the other templates, like `trestles`, `solana`, `marquee`, and `broadside`, you will want to have other information in your `about.qmd`, perhaps sections on Education and Experience.\n\nCheck out using these different templates and pick the one you like the most if you want to customize your about page. \n\n# Creating multi-level drop down menu headers\n\nEarlier I mentioned we can go into other websites to see how different features are coded. We are going to do this on the [OSU Code Club website](https://osu-codeclub.github.io/) to see how it has achieved having multi-level headers. We can also visit the [source repository](https://github.com/osu-codeclub/osu-codeclub.github.io/tree/main) on GitHub to see how this website is formatted.\n\nIf you look at the Code Club website homepage, you can see that the header \"New here?\" has a drop down, and allows you to choose from a few different options.\n\n![](img/new-here.png)\n\nHow was that done? If you remember back a few sessions ago, [we set what our headers were going](https://osu-codeclub.github.io/posts/website_02/#modifying-the-_quarto.yml-file) to be in the `_quarto.yml` file. Let's see what that file looks like from the Code Club source repo.\n\nThe `_quarto.yml` looks like this:\n\n```yaml\nproject:\n  type: website\n  preview: \n    navigate: false\n\nwebsite:\n  title: \"OSU Code Club\"\n  site-url: https://osu-codeclub.github.io/\n  repo-url: https://github.com/osu-codeclub/osu-codeclub.github.io\n  repo-actions: [edit, issue]\n  page-navigation: true\n  back-to-top-navigation: true\n  navbar:\n    left:\n      - href: pages/schedule.qmd\n        text: Schedule\n      - href: pages/previous.qmd\n        text: Previous sessions\n      - text: New here?\n        menu:\n        - text: Computer setup for Code Club\n          href: pages/setup.qmd\n        - text: R resources for beginners\n          href: pages/r_resources.qmd\n        - text: Sign up!\n          href: https://forms.gle/eYkMvmJShrcANUrt5\n```\n\nLooking at this we can see what code is used for make drop down headers. You can copy this code into your `_quarto.yml` and then modify the text and href to be appropriate for your site. \n\nRemember that when you link to new pages, you will need to have material for that page to populate. If we look at the example above, the \"Computer setup for Code Club\" material is in a file called `setup.qmd` in a folder called `pages` in the home directory of the website.\n\n# Altering website styling in `_quarto.yml`\n\nMaking simpler changes, like setting your background colors and fonts, you can do by altering your `_quarto.yml` file under the `format` header. For example, we could make the following changes to our practice-website.\n\n```yaml\nwebsite:\n  navbar:\n    background: \"#06280C\" # foresty green\n\nformat:\n  html:\n    theme: flatly\n    toc: true\n    number-sections: true\n    mainfont: Proxima Nova\n    backgroundcolor: \"#CFDAD3\" # light grey\n    monobackgroundcolor: \"#CFDAD3\" # light grey\n    title-block-banner: \"#06280C\" # foresty green\n    title-block-banner-color: \"#CFDAD3\" # light grey\n    fontcolor: \"#06280C\" # foresty green\n    linkcolor: \"#0E11E2\" # hyperlink blue\n\n```\n\nYou don't need to comment on what your colors are, I just like to do this since I have no connection between hexadecimal codes and actual colors, and this helps me to remember what is what. You can see all of the html options you can change within your YAML [here](https://quarto.org/docs/reference/formats/html.html)\n\nOnce you made changes, render your website to see what they look like.\n\n# Altering (S)CSS code to change website styling\n\nSometimes you might want to make more changes that what you can do using the avaiable keys in your YAML. When that is the case, you can make additional alterations by creating a `.scss` theme file.\n\nCSS stands for Cascading Style Sheets and it is used to format the layout of a webpage. By learning how to modify existing CSS files, it is relatively simple to change how your website looks. SCSS is Sassy CSS and the difference is not really important right now, but I think the `.scss` files are a little easier to modify, and are the default in Quarto, so we are going to work from those.\n\nThe Quarto website built in themes use [Bootswatch](https://bootswatch.com/) and both the Code Club and practice-website use flatly so let's start there. You can find `.scss.` files for each theme in the Quarto GitHub source repo [here](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/html/bootstrap/themes). I am going to go to the flatly theme and download it using the \"Download raw file\" button in the top right of the page. Save this file in the home directory of your website.\n\n![](img/download-scss.png)\n\nLet's open it in RStudio. We will play around with making some changes.\n\nOne thing you might want to change first are the colors. Quarto accepts color information as hexadecimal codes. If you want to know the hexadecimal 6 digit code for any color you can go to [www.htmlcolorcodes.com](https://htmlcolorcodes.com/) to find the color/code pair that you want.\n\nIn the [Quarto documentation](https://quarto.org/docs/output-formats/html-themes.html#sass-variables), you can find information about the Sass variables that can be specified within your `.scss.` file what what they mean.\n\n# Commit and push to GitHub\n\nOnce you are happy with your changes, the last step is to commit and push them to GitHub so the changes can be reflected on your website. You can do this in GitHub desktop by entering a comment in the bottom left, committing to main (or master), and then push to origin.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}