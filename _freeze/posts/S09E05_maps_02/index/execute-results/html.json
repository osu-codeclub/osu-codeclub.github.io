{
  "hash": "f7b0ab58b019e11de89da3dbee4a4c08",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Making maps in R: part II\"\nsubtitle: \"...\"\npagetitle: \"Maps II\"\nauthor: \"Jelmer Poelstra\"\ndate: \"2025-02-24\"\ncategories: [maps]\ntitle-block-banner: false\nnumber-depth: 2\nexecute: \n  eval: false\n  cache: false\nknitr:\n  opts_chunk:\n    out.width: \"85%\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n------------------------------------------------------------------------\n\nWe will also use some data sets from the _usdata_ (as in: US data) package,\nso go ahead and install that:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"usdata\")\n```\n:::\n\n\n\nWith both packages installed, we can now load them:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usdata)\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Bonus content: plotting Ohio cities\n\nWe'll need two additional packages:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"maps\")\ninstall.packages(\"ggrepel\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(maps)\nlibrary(ggrepel)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noh_cities <- us.cities |>\n  filter(country.etc == \"OH\") |>\n  mutate(name = sub(\" OH\", \"\", name))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ohio) +\n  geom_polygon(aes(x = long, y = lat, group = group),\n               fill = \"grey90\", color = \"grey70\") +\n  geom_point(data = oh_cities,\n             aes(x = long, y = lat, size = pop),\n             fill = \"steelblue3\", shape = 21) +\n  geom_text(data = oh_cities, aes(x = long, y = lat - 0.1, label = name)) +\n  coord_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ohio) +\n  geom_polygon(aes(x = long, y = lat, group = group),\n               fill = \"grey90\", color = \"grey70\") +\n  geom_point(data = oh_cities,\n             aes(x = long, y = lat, size = pop),\n             fill = \"steelblue3\", shape = 21) +\n  geom_text_repel(data = oh_cities, aes(x = long, y = lat, label = name)) +\n  coord_sf()\n```\n:::\n\n\n\n## A first choropleth map\n\nIn choropleth maps, the color of a geographic area differs based on some variable,\nlike population density, median income, mean temperature, or biodiversity.\nIn ggplot-speak, we would be mapping the `fill` aesthetic to a variable like\npopulation density.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstates |>\n  filter(region %in% c(\"ohio\", \"indiana\", \"michigan\")) |> \n  ggplot() +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = region),\n               color = \"grey40\", linewidth = 0.5) +\n  coord_sf()\n```\n:::\n\n\n\n<hr style=\"height:1pt; visibility:hidden;\" />\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stats\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stats_ed <- state_stats |>\n  mutate(region = tolower(state))\n\nstates_with_stats <- tibble(states) |>\n  left_join(state_stats_ed, by = \"region\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_polygon(\n    data = states_with_stats,\n    aes(x = long, y = lat, group = group, fill = med_income / 1000),\n    color = \"black\", linewidth = 0.1,\n  ) +\n  coord_sf(crs = 5070, default_crs = 4326) +\n  scale_fill_viridis_c(name = \"Median income\\n(thousands) \")\n```\n:::\n\n\n\n\n## Maps not colored by predefined areas\n\n## Plotting routes\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}