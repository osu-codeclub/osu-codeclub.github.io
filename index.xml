<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>OSU Code Club</title>
<link>https://osu-codeclub.github.io/index.html</link>
<atom:link href="https://osu-codeclub.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Mon, 13 Nov 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Shiny 03: Map viz. in Shiny</title>
  <dc:creator>Sandip Mondal and Horacio Lopez-Nicora</dc:creator>
  <link>https://osu-codeclub.github.io/posts/shiny_03/index.html</link>
  <description><![CDATA[ 



<p>Welcome to our <code>shiny</code> app development class! Throughout this session, Dr.&nbsp;Sandip Mondal will walk us through a case study to generate interactive maps using <code>shiny</code> app.</p>
<section id="shiny-app-to-visualize-maps." class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="shiny-app-to-visualize-maps."><span class="header-section-number">1</span> Shiny App to visualize maps.</h2>
<p>To follow step-by-step what we will cover today in class, please refer to this <a href="https://www.wvview.org/os_sa/ShinyApp_module.html#the-west-virginia-view-app-data">Shiny App</a>.</p>
<p><strong>Dataset description:</strong> This dataset was created by <a href="https://www.wvview.org/maxwell.html">Prof.&nbsp;Maxwell</a> for use in his courses. A variety of attributes have been summarized at the county-level. A total of 3,104 records are provided representing the majority of the counties in the contiguous United States. A few counties were excluded due to their small size.</p>
</section>
<section id="types-of-spatial-data." class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="types-of-spatial-data."><span class="header-section-number">2</span> Types of Spatial Data.</h2>
<p>There are two types of spatial data: vector and raster. Below is a graphical explanation of these data.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://zia207.github.io/geospatial-r-github.io/"><img src="https://osu-codeclub.github.io/posts/shiny_03/img/Types of spatial data.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Type of Spatial Data (Ahmed, 2023)</figcaption>
</figure>
</div>
</section>
<section id="what-do-we-expect-to-achieve-by-the-end-of-this-tutorial." class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="what-do-we-expect-to-achieve-by-the-end-of-this-tutorial."><span class="header-section-number">3</span> What do we expect to achieve by the end of this tutorial.</h2>
<p>Today we will start with the output, understand the components of the <code>shiny</code> app and what we want achieve.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/shiny_03/img/Application screenshot.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Different parameters from Ohio, Pennsylvania, and Indiana in an interactive map.</figcaption>
</figure>
</div>
</section>
<section id="building-our-shiny-app." class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="building-our-shiny-app."><span class="header-section-number">4</span> Building our Shiny App.</h2>
<p>Let’s make a <code>shiny</code> app and see how this works!</p>
<p>First <a href="https://github.com/osu-codeclub/osu-codeclub.github.io/tree/main/posts/shiny_03/data/map_data">download the following files</a> and set it to a working directory.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import libraries used in the APP</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#setwd("...map_data/")  </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">###</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Please make sure to use your own working directory</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(leaflet)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(htmlwidgets)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(htmltools)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(bslib)</span>
<span id="cb1-12">us <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/map_data/OH_IN_PA.shp"</span>) </span>
<span id="cb1-13">us <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> us <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(STATE_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OH'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> STATE_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'IN'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> STATE_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PA'</span>)  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Ohio, Indiana, Pennsylvania</span></span>
<span id="cb1-14">us <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(us, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(us)</span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(us)</span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(us[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>])</span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fist graph on ggplot = Income (boxplot)</span></span>
<span id="cb1-19">inc_p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(us, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>STATE_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>med_ncm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>STATE_A)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() </span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second graph on ggplot = Temperature (densityplot)</span></span>
<span id="cb1-22">temp_p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(us, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>tempmn, ..density.., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>STATE_A))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># third graph on ggplot = Population vs Development (scatterplot)</span></span>
<span id="cb1-25">pop_p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(us, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>POPULAT, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>per_dev, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span> STATE_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span> med_ncm))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#color palette for Temperature, Income and Population</span></span>
<span id="cb1-28">temp_pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorBin</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YlOrRd"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">domain=</span>us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tempmn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bin=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-29">pop_pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorNumeric</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Purples'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">domain=</span> us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>POPULAT)</span>
<span id="cb1-30">ncm_pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorNumeric</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Greens'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">domain=</span> us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>med_ncm)</span>
<span id="cb1-31"></span>
<span id="cb1-32"></span>
<span id="cb1-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define UI for the APP</span></span>
<span id="cb1-34"></span>
<span id="cb1-35">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb1-36">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theme =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">version =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bootswatch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spacelab"</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># theme from the library(bslib)</span></span>
<span id="cb1-37">  </span>
<span id="cb1-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ohio, Indiana and Pennsylvania"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color:#0d793e"</span>)), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Main title of the App use h1</span></span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">br</span>(),<span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### break the line two times</span></span>
<span id="cb1-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">br</span>(),</span>
<span id="cb1-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabsetPanel</span>(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#the tabset panel layout will include the three tab</span></span>
<span id="cb1-42">    </span>
<span id="cb1-43">    </span>
<span id="cb1-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tab 1: Data Exploration</span></span>
<span id="cb1-45">    </span>
<span id="cb1-46">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data explorer"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># title of the first tab</span></span>
<span id="cb1-47">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">br</span>(), </span>
<span id="cb1-48">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidRow</span>(</span>
<span id="cb1-49">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb1-50">                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"countryInput1"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#unique input ID</span></span>
<span id="cb1-51">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Choose a State"</span>,</span>
<span id="cb1-52">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>STATE_N),</span>
<span id="cb1-53">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ohio"</span>), </span>
<span id="cb1-54">               ), </span>
<span id="cb1-55">             ),</span>
<span id="cb1-56">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hr</span>(),</span>
<span id="cb1-57">             DT<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataTableOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#output ID</span></span>
<span id="cb1-58">    ),</span>
<span id="cb1-59">    </span>
<span id="cb1-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Tab 2: Visualization </span></span>
<span id="cb1-61">    </span>
<span id="cb1-62">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum plots"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#title of the second tab</span></span>
<span id="cb1-63">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">br</span>(), </span>
<span id="cb1-64">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#left section of the page used by the user to select input    </span></span>
<span id="cb1-65">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb1-66">                 </span>
<span id="cb1-67">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inc_pop_temp'</span>,<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#unique input ID</span></span>
<span id="cb1-68">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Select a variable'</span>,</span>
<span id="cb1-69">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Income"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population vs Development"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Median Temperature'</span>), ),</span>
<span id="cb1-70">              </span>
<span id="cb1-71">               ),</span>
<span id="cb1-72">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>( <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># right section of the page </span></span>
<span id="cb1-73">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxplot"</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#output ID</span></span>
<span id="cb1-74">               ))),</span>
<span id="cb1-75">    </span>
<span id="cb1-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Tab 3: Interactive Map</span></span>
<span id="cb1-77">    </span>
<span id="cb1-78">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Interactive Map"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#title of the third tab  </span></span>
<span id="cb1-79">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(    </span>
<span id="cb1-80">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#left section of the page used by the user to select input</span></span>
<span id="cb1-81">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"countryInput"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#unique input ID</span></span>
<span id="cb1-82">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Choose a State"</span>,</span>
<span id="cb1-83">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>STATE_N),</span>
<span id="cb1-84">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ohio"</span>),</span>
<span id="cb1-85">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputId =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"varInput"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#unique input ID</span></span>
<span id="cb1-86">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Choose a variable"</span>,</span>
<span id="cb1-87">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Population'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Income'</span>))</span>
<span id="cb1-88">                 ,),</span>
<span id="cb1-89">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># right section of the page </span></span>
<span id="cb1-90">                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leafletOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"map"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#output ID  </span></span>
<span id="cb1-91">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"500px"</span>))))  </span>
<span id="cb1-92">  ),)</span>
<span id="cb1-93"></span>
<span id="cb1-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define server logic </span></span>
<span id="cb1-95"></span>
<span id="cb1-96">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb1-97">  </span>
<span id="cb1-98">  selectedCountry1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reactive expression for the Data Explorer</span></span>
<span id="cb1-99">    us[us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>STATE_N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>countryInput1, ] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#match input of the user with the state name</span></span>
<span id="cb1-100">  })</span>
<span id="cb1-101">  </span>
<span id="cb1-102">  selectedCountry <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({ <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reactive expression for the Interactive Map</span></span>
<span id="cb1-103">    us[us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>STATE_N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>countryInput, ] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#match input of the user with the state name</span></span>
<span id="cb1-104">  })</span>
<span id="cb1-105">  </span>
<span id="cb1-106">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DT<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderDataTable</span>({ <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Data Explorer tab output</span></span>
<span id="cb1-107">    </span>
<span id="cb1-108">    data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry1</span>()</span>
<span id="cb1-109">    </span>
<span id="cb1-110">  })</span>
<span id="cb1-111">  </span>
<span id="cb1-112">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>boxplot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderPlot</span>({ <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Visualization tab output</span></span>
<span id="cb1-113">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>inc_pop_temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Income"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If input of the user is Income</span></span>
<span id="cb1-114">    {inc_p} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#then print Income graph</span></span>
<span id="cb1-115">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>inc_pop_temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Median Temperature"</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If input of the user is Median Temperature</span></span>
<span id="cb1-116">    {temp_p} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#then print Temperature graph</span></span>
<span id="cb1-117">    </span>
<span id="cb1-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>inc_pop_temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population vs Development"</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If input of the user is Pop vs Dev</span></span>
<span id="cb1-119">    {pop_p} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#then print Pop vs Dev graph</span></span>
<span id="cb1-120">    </span>
<span id="cb1-121">  })</span>
<span id="cb1-122">  </span>
<span id="cb1-123">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderLeaflet</span>({<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Interactive Map tab output</span></span>
<span id="cb1-124">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leaflet</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'map'</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#base map</span></span>
<span id="cb1-125">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leafletOptions</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zoomControl=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-126">      </span>
<span id="cb1-127">      htmlwidgets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">onRender</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function(el, x) {</span></span>
<span id="cb1-128"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      L.control.zoom({ position: 'topright' }).addTo(this)</span></span>
<span id="cb1-129"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-130">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addTiles</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OSM"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-131">      </span>
<span id="cb1-132">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addProviderTiles</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Esri.NatGeoWorldMap"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ESRI"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-133">      </span>
<span id="cb1-134">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addProviderTiles</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CartoDB.DarkMatter"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CartoDB"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-135">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addLayersControl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">baseGroups =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CartoDB"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OSM"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ESRI"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-136">      </span>
<span id="cb1-137">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addLegend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pal=</span>temp_pal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span>us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tempmn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-138">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addLegend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pal=</span>pop_pal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span>us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>POPULAT, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-139">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addLegend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pal=</span>ncm_pal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span>us<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>med_ncm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Income in $"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-140">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setView</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lat=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lng=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zoom=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb1-141">  })</span>
<span id="cb1-142">  </span>
<span id="cb1-143">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>({<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#observer</span></span>
<span id="cb1-144">    </span>
<span id="cb1-145">    state_popup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;strong&gt;County: &lt;/strong&gt;"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#popup </span></span>
<span id="cb1-146">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME,</span>
<span id="cb1-147">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;br&gt;&lt;strong&gt; Temperature: &lt;/strong&gt;"</span>,</span>
<span id="cb1-148">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tempmn,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&amp;#x2103"</span>,</span>
<span id="cb1-149">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;br&gt;&lt;strong&gt; Median Income: &lt;/strong&gt;"</span>,</span>
<span id="cb1-150">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>med_ncm,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span>,</span>
<span id="cb1-151">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;br&gt;&lt;strong&gt; Population: &lt;/strong&gt;"</span>,</span>
<span id="cb1-152">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>POPULAT)</span>
<span id="cb1-153">    </span>
<span id="cb1-154">    high_opt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">highlightOptions</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bringToFront =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#highlight when user select county</span></span>
<span id="cb1-155">    </span>
<span id="cb1-156">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>varInput <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature"</span>) {</span>
<span id="cb1-157">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leafletProxy</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"map"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-158">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#understand when to clearshapes</span></span>
<span id="cb1-159">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clearShapes() %&gt;%</span></span>
<span id="cb1-160">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPolygons</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillColor =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">temp_pal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tempmn),</span>
<span id="cb1-161">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup =</span> state_popup,</span>
<span id="cb1-162">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#302E2D"</span>,</span>
<span id="cb1-163">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillOpacity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-164">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-165">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> high_opt )</span>
<span id="cb1-166">    }</span>
<span id="cb1-167">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>varInput <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Income"</span>) {</span>
<span id="cb1-168">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leafletProxy</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"map"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-169">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#understand when to clearshapes</span></span>
<span id="cb1-170">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clearShapes() %&gt;%</span></span>
<span id="cb1-171">        </span>
<span id="cb1-172">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPolygons</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillColor =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncm_pal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>med_ncm),</span>
<span id="cb1-173">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup =</span> state_popup,</span>
<span id="cb1-174">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#302E2D"</span>,</span>
<span id="cb1-175">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillOpacity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-176">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-177">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> high_opt )</span>
<span id="cb1-178">      </span>
<span id="cb1-179">    }</span>
<span id="cb1-180">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>varInput <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>) {</span>
<span id="cb1-181">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leafletProxy</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"map"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-182">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#understand when to clearshapes</span></span>
<span id="cb1-183">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clearShapes() %&gt;%</span></span>
<span id="cb1-184">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPolygons</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillColor =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop_pal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedCountry</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>POPULAT),</span>
<span id="cb1-185">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup =</span> state_popup,</span>
<span id="cb1-186">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#302E2D"</span>,</span>
<span id="cb1-187">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillOpacity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-188">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-189">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> high_opt )</span>
<span id="cb1-190">    }</span>
<span id="cb1-191">    </span>
<span id="cb1-192">    </span>
<span id="cb1-193">  })</span>
<span id="cb1-194">  </span>
<span id="cb1-195">}</span>
<span id="cb1-196"></span>
<span id="cb1-197"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui =</span> ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server =</span> server)</span></code></pre></div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>shiny</category>
  <category>quarto</category>
  <guid>https://osu-codeclub.github.io/posts/shiny_03/index.html</guid>
  <pubDate>Mon, 13 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/shiny_03/img/shiny_logo.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Shiny 02: Intro to Shiny (cont.)</title>
  <dc:creator>Horacio Lopez-Nicora</dc:creator>
  <link>https://osu-codeclub.github.io/posts/shiny_02/index.html</link>
  <description><![CDATA[ 



<p>Welcome to our <code>shiny</code> app development class! Throughout this session, we will continue diving into the world of Shiny and explore its incredible potential for creating interactive web applications. Today we will use the function <code>reactiveVal</code>.</p>
<section id="shiny-app-to-collect-data." class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="shiny-app-to-collect-data."><span class="header-section-number">1</span> Shiny App to collect data.</h2>
<p>The <code>reactiveVal</code> function is utilized to create a “reactive value” object which has special capabilities for reactive programming. It serves as a variable that allows both reading and writing of values. Whenever the value is read from a <code>reactiveVal</code> object, the calling reactive expression becomes dependent on it. Similarly, when the value is altered, any reactives that were previously dependent on it are notified.</p>
<p>Let’s make a <code>shiny</code> app and see how this works!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install and call the following packages.</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DT)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize an empty data frame to store the collected data</span></span>
<span id="cb1-6">collected_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Treatment =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PlotNumber =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">StandCount =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PlantHeight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Severity =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-12">)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a variable to store the selected rows</span></span>
<span id="cb1-15">selected_rows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactiveVal</span>()</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the UI</span></span>
<span id="cb1-18">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Soybean Field Data Collection"</span>),</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb1-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb1-23">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"treatment"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Select Treatment:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T3"</span>)),</span>
<span id="cb1-24">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Plot Number:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">304</span>),</span>
<span id="cb1-25">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stand_count"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Stand Count:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-26">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plant_height"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Plant Height (in cm):"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-27">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"severity"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Severity Rating:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-28">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit Data"</span>),</span>
<span id="cb1-29">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Delete Selected Row"</span>),</span>
<span id="cb1-30">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"downloadData"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Download Data"</span>)</span>
<span id="cb1-31">    ),</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(</span>
<span id="cb1-34">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DTOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataTable"</span>)</span>
<span id="cb1-35">    )</span>
<span id="cb1-36">  )</span>
<span id="cb1-37">)</span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the server</span></span>
<span id="cb1-40">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb1-41">  collected_data_reactive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactiveVal</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb1-42">  </span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb1-44">    new_entry <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-45">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Treatment =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>treatment,</span>
<span id="cb1-46">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PlotNumber =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot,</span>
<span id="cb1-47">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">StandCount =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stand_count,</span>
<span id="cb1-48">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PlantHeight =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plant_height,</span>
<span id="cb1-49">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Severity =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>severity</span>
<span id="cb1-50">    )</span>
<span id="cb1-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append the new entry to the collected data</span></span>
<span id="cb1-52">    collected_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collected_data_reactive</span>(), new_entry)</span>
<span id="cb1-53">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collected_data_reactive</span>(collected_data)</span>
<span id="cb1-54">    </span>
<span id="cb1-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reset input fields</span></span>
<span id="cb1-56">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateSelectInput</span>(session, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"treatment"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T1"</span>)</span>
<span id="cb1-57">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateNumericInput</span>(session, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb1-58">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateNumericInput</span>(session, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stand_count"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-59">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateNumericInput</span>(session, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plant_height"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-60">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateNumericInput</span>(session, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"severity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-61">  })</span>
<span id="cb1-62">  </span>
<span id="cb1-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>delete, {</span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the selected row(s) and remove them from the collected data</span></span>
<span id="cb1-65">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selected_rows</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dataTable_rows_selected)</span>
<span id="cb1-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selected_rows</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-67">      collected_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collected_data_reactive</span>()</span>
<span id="cb1-68">      collected_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> collected_data[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selected_rows</span>(), ]</span>
<span id="cb1-69">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collected_data_reactive</span>(collected_data)</span>
<span id="cb1-70">    }</span>
<span id="cb1-71">  })</span>
<span id="cb1-72">  </span>
<span id="cb1-73">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dataTable <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderDT</span>({</span>
<span id="cb1-74">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datatable</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collected_data_reactive</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">select =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multi"</span>))</span>
<span id="cb1-75">  })</span>
<span id="cb1-76">  </span>
<span id="cb1-77">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download data as a CSV file</span></span>
<span id="cb1-78">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>downloadData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span>(</span>
<span id="cb1-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb1-80">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collected_data.csv"</span></span>
<span id="cb1-81">    },</span>
<span id="cb1-82">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">content =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(file) {</span>
<span id="cb1-83">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collected_data_reactive</span>(), file)</span>
<span id="cb1-84">    }</span>
<span id="cb1-85">  )</span>
<span id="cb1-86">}</span>
<span id="cb1-87"></span>
<span id="cb1-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the app</span></span>
<span id="cb1-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</div>
<p>Now that we have successfully developed a <code>shiny</code> app for data collection, we can now proceed to working on another app designed for processing the collected data.</p>
</section>
<section id="shiny-app-to-process-collected-data." class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="shiny-app-to-process-collected-data."><span class="header-section-number">2</span> Shiny App to process collected data.</h2>
<p>We will use <code>shinyjs</code> and <code>ggstatsplot</code> to generate a <code>shiny</code> app that will use collected data to process and generate some preliminary data viz and descriptive stats. For this you will need to use <code>.csv</code> file <strong>Aggressiveness_Zone.csv</strong> that was sent to your email.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load required libraries</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggstatsplot)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shinyjs)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define UI</span></span>
<span id="cb2-9">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useShinyjs</span>(),</span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary Statistics and Plots"</span>),</span>
<span id="cb2-12">  </span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb2-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb2-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fileInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"file"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Choose CSV File"</span>),</span>
<span id="cb2-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotType"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Select Plot Type"</span>,</span>
<span id="cb2-17">                  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Box-violin Plot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Box Plot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Violin Plot"</span>)),</span>
<span id="cb2-18">      </span>
<span id="cb2-19">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add options to modify axis label and tick label size</span></span>
<span id="cb2-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sliderInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axisLabelSize"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Axis Label Size"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb2-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sliderInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axisTickLabelSize"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Axis Tick Label Size"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-22">    ),</span>
<span id="cb2-23">    </span>
<span id="cb2-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(</span>
<span id="cb2-25">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabsetPanel</span>(</span>
<span id="cb2-26">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary Statistics"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tableOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summaryTable"</span>)),</span>
<span id="cb2-27">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plots"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>))</span>
<span id="cb2-28">      )</span>
<span id="cb2-29">    )</span>
<span id="cb2-30">  )</span>
<span id="cb2-31">)</span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define server</span></span>
<span id="cb2-34">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb2-35">  data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb2-36">    inFile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>file</span>
<span id="cb2-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(inFile)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb2-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(inFile<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>datapath)</span>
<span id="cb2-39">  })</span>
<span id="cb2-40">  </span>
<span id="cb2-41">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define plot_type in the global scope</span></span>
<span id="cb2-42">  plot_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb2-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>())) {</span>
<span id="cb2-44">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">switch</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plotType,</span>
<span id="cb2-45">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Box-violin Plot"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-46">               ggstatsplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggbetweenstats</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> AEZ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> RF, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">messages =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb2-47">             },</span>
<span id="cb2-48">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Box Plot"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> AEZ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> RF, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> AEZ)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-49">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-50">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-51">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisTickLabelSize),</span>
<span id="cb2-52">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisTickLabelSize),</span>
<span id="cb2-53">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisLabelSize),</span>
<span id="cb2-54">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisLabelSize))</span>
<span id="cb2-55">             ,</span>
<span id="cb2-56">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Violin Plot"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> AEZ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> RF, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> AEZ)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-57">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_violin</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-58">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> AEZ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> RF), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitterdodge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">jitter.width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dodge.width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-59">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> AEZ), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> mean_cl_boot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crossbar"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-60">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-61">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisTickLabelSize),</span>
<span id="cb2-62">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisTickLabelSize),</span>
<span id="cb2-63">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisLabelSize),</span>
<span id="cb2-64">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>axisLabelSize))</span>
<span id="cb2-65">      )</span>
<span id="cb2-66">    }</span>
<span id="cb2-67">  })</span>
<span id="cb2-68">  </span>
<span id="cb2-69">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>summaryTable <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderTable</span>({</span>
<span id="cb2-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>())) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb2-71">    summary_stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-72">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(AEZ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-73">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb2-74">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(RF),</span>
<span id="cb2-75">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Standard_Deviation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(RF),</span>
<span id="cb2-76">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Standard_Error =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(RF) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb2-77">      )</span>
<span id="cb2-78">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(summary_stats)</span>
<span id="cb2-79">  })</span>
<span id="cb2-80">  </span>
<span id="cb2-81">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderPlot</span>({</span>
<span id="cb2-82">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_type</span>()</span>
<span id="cb2-83">  })</span>
<span id="cb2-84">}</span>
<span id="cb2-85"></span>
<span id="cb2-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the application</span></span>
<span id="cb2-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>shiny</category>
  <category>quarto</category>
  <guid>https://osu-codeclub.github.io/posts/shiny_02/index.html</guid>
  <pubDate>Mon, 06 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/shiny_02/img/shiny_logo.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Shiny 01: Intro to Shiny</title>
  <dc:creator>Horacio Lopez-Nicora</dc:creator>
  <link>https://osu-codeclub.github.io/posts/shiny_01/index.html</link>
  <description><![CDATA[ 



<p>Welcome to our <code>shiny</code> app development class! Throughout this session, we will dive into the world of Shiny and explore its incredible potential for creating interactive web applications.</p>
<p>By the end of this session, you will have a solid understanding of what Shiny is and how it can be utilized to build dynamic apps. We will also focus on mastering the basic structure of a Shiny app, equipping you with the necessary skills to create your own customized applications.</p>
<section id="what-is-shiny" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> What is Shiny?</h1>
<p>Shiny is an R package (<code>shiny</code>) and web framework that allows users to build interactive web applications using R. With the Shiny package, users can easily share their models, plots, or tables with others who can then access and interact with them on the web. This allows anyone to input values and obtain estimates for outcomes without having to perform any calculations themselves.</p>
<p>The <a href="https://shiny.posit.co">Shiny</a> package and <a href="https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html">accompanying teaching materials</a> are designed to make building web applications manageable even for those with limited programming experience. Before we get started today, check out the <a href="https://shiny.posit.co/r/gallery/">Shiny Gallery</a>! Here, you will discover numerous Shiny apps that can inspire and educate you.</p>
</section>
<section id="the-basic-structure-of-a-shiny-app" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> The Basic Structure of a Shiny App</h1>
<p>A Shiny app has two sections, as seen in the diagram below:</p>
<ul>
<li><p>the <strong><em>user interface (ui)</em></strong> section which accepts inputs from users, and displays output values to users</p></li>
<li><p>the <strong><em>server section</em></strong>, which ingests the input, processes the data, renders output values to HTML, and sends these back to the user interface (ui).</p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://bookdown.org/pdr_higgins/rmrwr/a-gentle-introduction-to-shiny.html"><img src="https://osu-codeclub.github.io/posts/shiny_01/img/shiny-input-flow.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">The basic structure of a Shiny App. (Higgins 2023)</figcaption>
</figure>
</div>
<section id="the-user-interface-section-structure" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="the-user-interface-section-structure"><span class="header-section-number">2.1</span> The User Interface Section Structure</h2>
<p>The user interface, commonly referred to as the “front end” of an application, is the visual and interactive aspect that users encounter. It is typically organized into several sections: <code>titlePanel()</code>, <code>sidebarPanel()</code>, and <code>mainPanel()</code>. In order to establish this structure, the code must be organized into sections that are constructed with functions, as demonstrated below.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://bookdown.org/pdr_higgins/rmrwr/a-gentle-introduction-to-shiny.html#the-user-interface-section-structure"><img src="https://osu-codeclub.github.io/posts/shiny_01/img/shiny-ui-structure.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Basic ui (User Interface) code structure (Higgins 2023)</figcaption>
</figure>
</div>
<p>The code required to achieve this follows a similar hierarchy, as depicted in the figure below.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://bookdown.org/pdr_higgins/rmrwr/a-gentle-introduction-to-shiny.html#the-user-interface-section-structure"><img src="https://osu-codeclub.github.io/posts/shiny_01/img/shiny-ui-hierarchy.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">User Interface (ui) hierarchy code structure (Higgins 2023)</figcaption>
</figure>
</div>
</section>
<section id="the-server-section-structure" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="the-server-section-structure"><span class="header-section-number">2.2</span> The Server Section Structure</h2>
<p>The server section of an app, also known as the “back end”, is where data processing takes place. Users don’t see this part but it handles inputs from the user and generates outputs such as model predictions or tables. These results are rendered to HTML and assigned to unique output values.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://bookdown.org/pdr_higgins/rmrwr/a-gentle-introduction-to-shiny.html#the-server-section-structure"><img src="https://osu-codeclub.github.io/posts/shiny_01/img/shiny-server-structure.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Basic server code structure (Higgins 2023)</figcaption>
</figure>
</div>
</section>
<section id="how-to-run-a-shiny-app" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="how-to-run-a-shiny-app"><span class="header-section-number">2.3</span> How to Run a Shiny App</h2>
<p>The code required to run a Shiny app is always the same and quite straightforward. The <code>shinyApp()</code> function takes two arguments: the user interface (ui) and the server code (server) that are being used.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://bookdown.org/pdr_higgins/rmrwr/a-gentle-introduction-to-shiny.html#how-to-run-an-app"><img src="https://osu-codeclub.github.io/posts/shiny_01/img/shiny-run-code.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Executing and running a Shiny App (Higgins 2023)</figcaption>
</figure>
</div>
</section>
<section id="how-to-stop-a-shiny-app" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="how-to-stop-a-shiny-app"><span class="header-section-number">2.4</span> How to Stop a Shiny App</h2>
<p>To stop your app, you have several options:</p>
<ol type="1">
<li>Click the stop sign icon located on the toolbar of the R Console pane.</li>
<li>Close the Shiny app window.</li>
<li>Click within the Console pane and then press Esc (or Ctrl-C if using the command line) to halt it.</li>
</ol>
</section>
</section>
<section id="lets-build-our-first-shiny-app" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Let’s Build Our First Shiny App</h1>
<p>To begin, make sure you have the <code>shiny</code> package installed. If not, go ahead and install it now.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shiny'</span>)</span></code></pre></div>
</div>
<p>Secondly, let’s assemble the three fundamental structures of a Shiny App.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb2-2">ui<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb2-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># *Input () functions</span></span>
<span id="cb2-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># *Output () functions</span></span>
<span id="cb2-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># *Layout () functions</span></span>
<span id="cb2-6">)</span>
<span id="cb2-7">server<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output){</span>
<span id="cb2-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># render * () functions with R expressions inside</span></span>
<span id="cb2-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reactive () expressions</span></span>
<span id="cb2-10">}</span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui=</span>ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server=</span>server)</span></code></pre></div>
</div>
<section id="lets-complete-each-section." class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="lets-complete-each-section."><span class="header-section-number">3.1</span> Let’s Complete Each Section.</h2>
<ol type="1">
<li>Call <code>shiny</code> into R environment</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span></code></pre></div>
</div>
<ol start="2" type="1">
<li>Let’s complete some of the sections:</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>( </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is my First Shiny App"</span>), </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>( </span>
<span id="cb4-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is the sidebar panel."</span>), </span>
<span id="cb4-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is the main panel, where output is displayed."</span>) </span>
<span id="cb4-6">    ) </span>
<span id="cb4-7">  )</span></code></pre></div>
</div>
<ol start="3" type="1">
<li>We have no input, so, we just need the basic server function.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyServer</span>(</span>
<span id="cb5-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input,output){ </span>
<span id="cb5-3">    } </span>
<span id="cb5-4">  )</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>Let’s run our Shiny App!</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui=</span>ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server=</span>server)</span></code></pre></div>
</div>
</section>
<section id="lets-make-some-modifications." class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="lets-make-some-modifications."><span class="header-section-number">3.2</span> Let’s Make Some Modifications.</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#1. Load your library, always.</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#2. Let’s fill some of the sections</span></span>
<span id="cb7-5">ui<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is my First Shiny App"</span>), </span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb7-8">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h3</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is sidebar panel."</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h4</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Notice the sidebar is displayed on the right."</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h5</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"But looked better on the left side."</span>)),</span>
<span id="cb7-9">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h4</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is the main panel, where output is displayed."</span>),</span>
<span id="cb7-10">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h5</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is additional explanation about the output."</span>))</span>
<span id="cb7-11">  )</span>
<span id="cb7-12">)</span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#3. We have no input, so, we just need the basic server function</span></span>
<span id="cb7-15">server<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyServer</span>(</span>
<span id="cb7-16">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input,output){</span>
<span id="cb7-17">  }</span>
<span id="cb7-18">)</span>
<span id="cb7-19"></span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#4. Let’s run the app</span></span>
<span id="cb7-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui=</span>ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server=</span>server)</span></code></pre></div>
</div>
</section>
<section id="lets-include-text-input" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="lets-include-text-input"><span class="header-section-number">3.3</span> Let’s Include Text Input</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb8-2"></span>
<span id="cb8-3">ui<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Our First Shiny App"</span>), </span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb8-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb8-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter your first and last name"</span>),</span>
<span id="cb8-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter your email"</span>),</span>
<span id="cb8-9">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Select the country you live in"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choices =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Australia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Germany"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Paraguay"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UK"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USA"</span>))</span>
<span id="cb8-10">    ),</span>
<span id="cb8-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>(</span>
<span id="cb8-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your contact information"</span>),</span>
<span id="cb8-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>),</span>
<span id="cb8-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>),</span>
<span id="cb8-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>)</span>
<span id="cb8-16">    ) </span>
<span id="cb8-17">  )  </span>
<span id="cb8-18">)</span>
<span id="cb8-19"></span>
<span id="cb8-20">server<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyServer</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output){</span>
<span id="cb8-21">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb8-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name)</span>
<span id="cb8-23">  })</span>
<span id="cb8-24">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>email<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb8-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>email)</span>
<span id="cb8-26">  })</span>
<span id="cb8-27">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>country<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb8-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>country)</span>
<span id="cb8-29">  })</span>
<span id="cb8-30">})</span>
<span id="cb8-31"></span>
<span id="cb8-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui=</span>ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server =</span> server)</span></code></pre></div>
</div>
</section>
</section>
<section id="summary" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Summary</h1>
<p>For more information, please visit the <a href="https://rstudio.github.io/cheatsheets/shiny.pdf">Shiny CheatSheet</a> and refer to the figure below to gain a better understanding of the sections of the Shiny App <strong><em>ui</em></strong>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://bookdown.org/pdr_higgins/rmrwr/a-gentle-introduction-to-shiny.html#the-user-interface-section-structure"><img src="https://osu-codeclub.github.io/posts/shiny_01/img/shiny-ui-sections.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Understanding the Shiny User Interface (<strong><em>ui</em></strong>) Sections (Higgins 2023)</figcaption>
</figure>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>shiny</category>
  <category>quarto</category>
  <guid>https://osu-codeclub.github.io/posts/shiny_01/index.html</guid>
  <pubDate>Mon, 30 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/shiny_01/img/shiny_logo.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Quarto website 7: making a presentation</title>
  <dc:creator>Jessica Cooperstone</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_07_presentation/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Today we are going to learn how to make a presentation using Quarto. We will go over how to:</p>
<ol type="1">
<li>Create a Quarto presentation document</li>
<li>Alter the YAMl to change your theming</li>
<li>Create slides</li>
</ol>
<p><a href="https://quarto.org/docs/presentations/revealjs/demo/">Here</a> you can find a demo presentation that will show you some of the options of things you can do in a Quarto presentation.</p>
</section>
<section id="create-a-quarto-presentation" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Create a Quarto presentation</h1>
<p>Open the project that contains your website. Then go to <code>File</code> &gt; <code>New File</code> &gt; <code>Quarto Presentation</code>. We are going to render our prsentation into a <a href="https://revealjs.com/">Reveal JS</a> format (kind of like the presentation equivalent of .html). This is an open source .html format for presentations. Since we’ve been using the visual markdown editor, check the box to use it now.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/new-quarto-presentation.png" class="img-fluid"></p>
<p>Save this file in your website directory.</p>
</section>
<section id="the-yaml" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> The YAML</h1>
<p>We will first look at the YAML.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My practice presentation"</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jessica Cooperstone"</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> revealjs</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">editor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> visual</span></span></code></pre></div>
<p>Let’s render the <code>.qmd</code> file to see what it looks like.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/my-practice-presentation.png" class="img-fluid"></p>
<p>In your viewer, if you click on the hamburger in the bottom left corner, we can see:</p>
<ul>
<li>Slides: here we have our first slide, and an empty second slide</li>
<li>Tools: which let’s us view the slides in different way, and export them as a pdf</li>
<li>Close: which just gets us out of this view</li>
</ul>
<p>We can adjust our YAML to change the themeing of our slides by setting key:value pairs under <code>format</code>. Here are some that I’ve set which renders like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My practice presentation"</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jessica Cooperstone"</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">revealjs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slide-number</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img/my-image.png"</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">footer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I ❤️ [Code Club](https://osu-codeclub.github.io/)"</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> moon</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">echo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/my-practice-presentation-moon.png" class="img-fluid"></p>
<p>Just like there are</p>
<ul>
<li><code>slide-number</code> can be <code>true</code> or <code>false</code>, and there are <a href="https://quarto.org/docs/reference/formats/presentations/revealjs.html#slides">different formats</a> of numbering to pick from.</li>
<li><code>logo</code> allows you to specify a logo which will appear on the bottom right of your slide, I’ve selected an image of the code slash</li>
<li><code>footer</code> sets a footer which appears in the middle of your slides</li>
<li><code>theme</code> can be set a preset themes for a presentation. Click <a href="https://quarto.org/docs/presentations/revealjs/themes.html">here</a> to see the full list. You can also set a theme by providing a <code>.scss.</code> file.</li>
<li><code>echo: true</code> means by default all code will be shown, this is the default</li>
</ul>
<p>You can find the full list of all the options for <code>revealjs</code> <a href="https://quarto.org/docs/reference/formats/presentations/revealjs.html">here</a>.</p>
<p>The settings of your YAML will inherit for your whole presentation, unless you override any options for an individual slide.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Let’s all try playing around with our YAML.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
<section id="creating-slides" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Creating slides</h1>
<p>You can add a slide by creating a level 2 header (by using two hashtags), or if you’re in the visual editor, you can click on <code>Normal</code> &gt; <code>Header 2</code>. This will insert a slide.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/add-slide.png" class="img-fluid"></p>
<p>If we toggle back to <code>Source</code> you can see that just two <code>##</code> have been added. You might find typing this easier than setting a <code>Header 2</code>.</p>
<p>What we type here in Heading 2 will be the title of our slide.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/heading-2.png" class="img-fluid"></p>
<p>If you wanted to make a bulleted list, you can use the visual editor to insert bullets, and add some content.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/slide-2.png" class="img-fluid"></p>
<p>Try rendering this to see what happens.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/slide-2-rendered.png" class="img-fluid"></p>
<p>If you click back and forth in your viewer, you will see that both items in the bulleted list appear together. If you want bullets to populate one at a time, you can set <code>incremental: true</code> in your YAML, or if you just want the bullets to increment in this slide only, you can set it by clicking on the three dots on the right of your slide, and setting Classes to be <code>.incremental</code>. You can learn more about incremental lists <a href="https://quarto.org/docs/presentations/revealjs/#incremental-lists">here</a>. If you toggle between the visual and source editor, you can see what code you’d need to type to get your bullets to be incremental.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/incremental.png" class="img-fluid"></p>
<p>This is what your incremented slide would look like in the source editor.</p>
<pre><code>## The title of my second slide

::: incremental
-   The first item in my list
-   A second item in my list
:::</code></pre>
<p>One of the main reasons you might want to create a Quarto presentation is because you want to show code. Just like we talked about last week, you can add a code chunk by clicking <code>Insert</code> &gt; <code>Executable cell</code> &gt; <code>R</code> to add an R code chunk.</p>
<p>You can type whatever code you want, here I am putting in some code that makes a plot. I am setting at the top of the chunk that I want the output to be on the next slide, since the code is a little long and the plot is a little big.</p>
<p>A the top of a code chunk, you can set the options for that chunk after <code>#|</code> at the top of that chunk.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| output-location: slide</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span>
<span id="cb4-4"></span>
<span id="cb4-5">penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguin species"</span>,</span>
<span id="cb4-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flipper length, in mm"</span>,</span>
<span id="cb4-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguin flipper length by species"</span>)</span></code></pre></div>
<p>When this renders, it looks like this:</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/penguins-1.png" class="img-fluid"></p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/penguins-2.png" class="img-fluid"></p>
<p>We can also make it so that the code is collapsable, like this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| code-fold: true</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| code-summary: "Click for the full code"</span></span>
<span id="cb5-3"></span>
<span id="cb5-4">penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguin species"</span>,</span>
<span id="cb5-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flipper length, in mm"</span>,</span>
<span id="cb5-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguin flipper length by species"</span>)</span></code></pre></div>
<p>When rendered, it looks like this:</p>
<p><img src="https://osu-codeclub.github.io/posts/website_07_presentation/img/penguins-hide-code.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Let’s all try playing around with creating slides and modifying them. Is there anything specific anyone wants to know how to do?
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>website</category>
  <category>quarto presentations</category>
  <guid>https://osu-codeclub.github.io/posts/website_07_presentation/index.html</guid>
  <pubDate>Mon, 16 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Quarto website 6: Quarto features</title>
  <dc:creator>Jelmer Poelstra</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_06/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<section id="introduction" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1</span> Introduction</h2>
<p>The source documents for your website’s pages are in the Quarto (<code>.qmd</code>) format. Today, we will learn more about options to format Quarto documents, and to include code and its output.</p>
<p>As we have mentioned before, <em>Quarto is a type of Markdown format</em> (and essentially the successor to “R Markdown”) with extensions such as:</p>
<ul>
<li><p>Making it possible to include executable <strong>code</strong> and its results. This code will typically be R code, but Quarto also supports Python, for instance.</p></li>
<li><p>A more extensive set of <strong>built-in formatting options</strong>, like “callout boxes” and “tabsets”, which we’ll see today.</p></li>
</ul>
<p>Your website’s Quarto documents will all produce <strong>HTML</strong> output, and this is also the default (and generally preferred) output format for stand-alone Quarto documents, but it is also possible to output to <strong>Word</strong> and <strong>PDF</strong> formats.</p>
<p>A common use case for stand-alone Quarto documents is a <strong>digital notebook or report</strong> that includes results produced by R code. If you use R to produce some results and/or figures that you need to share or compile with accompanying notes, then using Quarto to do so is a lot easier, more robust, and reproducible than copying and pasting figures into (e.g.) a Powerpoint document.</p>
<p>Because it’s straightforward to make the output look polished, and because you can include citations too, it is also a good option for more <strong>formal reports</strong> and even <strong>manuscripts</strong>. As mentioned last week, you can also output a <strong>slide deck</strong>, and it is even possible to include these directly on your website since the output format for slides can be HTML.</p>
<p>We will continue to use RStudio’s <strong>Visual Editor</strong>, and will basically make our way through the options in the bar that is right above your main editor window (but only when you’re in “Visual” mode):</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/menu.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<section id="creating-a-document-for-practice" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="creating-a-document-for-practice"><span class="header-section-number">1.1</span> Creating a document for practice</h3>
<p>I will start by creating a new Quarto document to practice using these features. If you want to follow along:</p>
<ul>
<li>In RStudio, click “File” =&gt; “New File” =&gt; “Quarto Document”.</li>
<li>Check the box “Use visual markdown editor”, and optionally add a Title and an Author.</li>
</ul>
<p><br></p>
</section>
</section>
<section id="sec-introduction" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="sec-introduction"><span class="header-section-number">2</span> Basic formatting</h2>
<section id="options-from-the-format-dropdown-menu" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="options-from-the-format-dropdown-menu"><span class="header-section-number">2.1</span> Options from the “Format” dropdown menu</h3>
<p>The following options are available under the “Format” dropdown:</p>
<ul>
<li><p>“<strong>Code</strong>” formatting <code>looks like this</code> and can be used for e.g.&nbsp;code snippets, file names, and software names.</p></li>
<li><p><strong>Bold</strong>, <em>italic</em>, <u>underlined</u>, <del>Strikeout</del>, <sup>superscript</sup>, <sub>subscript</sub> , <span class="smallcaps">small caps</span> (some of these are under the “Text” subheading)</p></li>
<li><p><strong>Bullet lists and numbered lists</strong>, which can optionally be in a “tight” layout: press the <code>…</code> at the top-right.</p>
<ul class="task-list">
<li><input type="checkbox">Within a list, you can have an “Item Checkbox” to make a checklist…</li>
<li><input type="checkbox" checked="">…and these boxes can be checked.</li>
</ul></li>
<li><p>“Blockquotes”, which can be used to provide a quote or even to highlight a bit of text in a different format:</p></li>
</ul>
<blockquote class="blockquote">
<p>“Blockquotes are great” — J. Doe</p>
</blockquote>
<p>Several of these items are also present as separate buttons directly in the top bar.</p>
<p><br></p>
</section>
<section id="headers" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="headers"><span class="header-section-number">2.2</span> Headers</h3>
<p>The dropdown menu to the left of the bullet list icon (it will say “Normal” unless you’re cursor is on a header line) allows you to pick a <strong>header level</strong> as opposed to the default, “Normal” formatting for your focal paragraph. Recall that headers will:</p>
<ul>
<li><p>Be <strong>numbered</strong> if you use the YAML option <code>number-sections: true</code> either site-wide (in <code>_quarto.yml</code>) or at the top of your focal document</p></li>
<li><p>Show up in a <strong>Table of Contents</strong> if you use the YAML option <code>toc: true</code>.</p></li>
<li><p>By default have “<strong>anchors</strong>” that you can see when you hover over or near them in the output. Clicking on an anchor will give you a <em>direct link</em> to this section in your document.</p></li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Cross-references
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can use regular hyperlinks (see below) to refer to different pages and specific headers on your website. Additionally, it is possible to insert clickable cross-references to e.g.&nbsp;figures and tables — see <a href="https://quarto.org/docs/authoring/cross-references.html">these Quarto docs</a>.</p>
</div>
</div>
<p><br></p>
</section>
<section id="options-from-the-insert-dropdown" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="options-from-the-insert-dropdown"><span class="header-section-number">2.3</span> Options from the “Insert” dropdown</h3>
<ul>
<li><p>“<strong><em>Link</em></strong>” to include a clickable <a href="https://quarto.org/docs/reference/formats/html.html">link</a> with custom text.</p></li>
<li><p><strong><em>Footnote</em></strong><sup>1</sup>, which shows up as a superscripted number in the main text, with the full footnote printed at the bottom of the page. Best of all, you can also <em>hover over the superscripted number</em> to see the footnote text.</p></li>
<li><p>“Special characters” =&gt; “Insert <strong><em>Emoji</em></strong>” =&gt; 🤓.</p></li>
<li><p>“<strong><em>Horizontal rule</em></strong>”, which can be nice to break up your content:</p></li>
</ul>
<hr>
<p><br></p>
</section>
</section>
<section id="citations" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="citations"><span class="header-section-number">3</span> Citations</h2>
<p>Addings citations is also possible via the “Insert” drop-down menu. Any citation you add will be automatically included in a reference list at the bottom of the document! In the text, the citation will show up as a link to the reference list and you can also hover over the link to see the full reference: <span class="citation" data-cites="m.horst2022">(M. Horst, Presmanes Hill, and B. Gorman 2022)</span>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/reflist.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="figure-caption">A reference list is automatically added to the end of the document</figcaption>
</figure>
</div>
<p>This is a really nice feature that benefits a lot from the RStudio Visual Editor. Without the Visual Editor, you’ll have to make a text file yourself with all the information for each reference (a bibliography in BibTex (<code>.bib</code>) format) — this can be exported from your reference manager, but that’s still a hassle because you often add citations one-by-one to a piece of text. With the Visual Editor, you can search for references online and when you include a reference:</p>
<ul>
<li>It will be automatically saved in a bibliography file.</li>
<li>When adding your first citation, the following line will be automatically added to the YAML header of your Quarto document: <code>bibliography: references.bib</code>. This line will make sure a reference list is added to the end of the document.</li>
</ul>
<p>If you have Zotero installed on your computer, then your Zotero library will be automatically available. Otherwise, you can search for references in several ways, as shown by the following screenshots:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">CrossRef search</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">DOI search</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Zotero library</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/crossref.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/doi.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/zotero.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<p>To <strong><em>format your citations</em></strong>, both in terms of how they appear in the text and in your reference list, see <a href="https://quarto.org/docs/authoring/footnotes-and-citations.html">this Quarto documentation page</a>.</p>
<p><br></p>
<section id="your-turn-try-to-use-some-of-the-features-discussed-above" class="level4 unnumbered exercise">
<h4 class="unnumbered anchored" data-anchor-id="your-turn-try-to-use-some-of-the-features-discussed-above">Your turn: Try to use some of the features discussed above</h4>
<ul>
<li><p>If you didn’t already do so, it probably makes sense to create a new Quarto document for this experimentation.</p></li>
<li><p>After you’ve used a couple of features, switch from “Visual” to “Source” editor mode, and check what the syntax is for these features!</p></li>
</ul>
</section>
<p><br></p>
</section>
<section id="sec-chunks" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="sec-chunks"><span class="header-section-number">4</span> Code blocks and chunks</h2>
<p>Both under the “Format” and “Insert” drop-down menus, you can find the “<strong>Code block</strong>” item, which will insert a block (one or more lines) of code-formatted text — but code in this type of block will not be executed. When the pop-up window asks you to type the name of a language, you can type “R”, but this information is only used for code <em>formatting</em> purposes. These kind of blocks can be useful if you just want to demonstrate/explain some code:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb1-2">x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span></code></pre></div>
<p>By contrast, the “<strong>Executable Cell</strong>” item (again, choose “R” as the language) will produce blocks also known as “Code Chunks”, which contain code that <em>can</em> be executed. By default, the code will in fact be executed and its results (if any) will be printed below the code chunk:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-2">x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 30</code></pre>
</div>
</div>
<p>Because code output consisting of just a number is a little boring, let’s insert a chunk with the following code, which will <strong>produce a plot</strong> — and that plot will similarly be shown below the code as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> iris,</span>
<span id="cb4-3">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Sepal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://osu-codeclub.github.io/posts/website_06/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>…Or a chunk that <strong>produces a simple table</strong>: in this case, simply the first lines of the <code>iris</code> dataframe. This dataframe output will display as shown below (which is a little nicer than the default formatting) when you include a line <code>df-print: kable</code> in the YAML header of your document:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(iris)</span></code></pre></div>
<div class="cell-output-display">
<div class="kable-table">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: right;">Sepal.Length</th>
<th style="text-align: right;">Sepal.Width</th>
<th style="text-align: right;">Petal.Length</th>
<th style="text-align: right;">Petal.Width</th>
<th style="text-align: left;">Species</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">5.1</td>
<td style="text-align: right;">3.5</td>
<td style="text-align: right;">1.4</td>
<td style="text-align: right;">0.2</td>
<td style="text-align: left;">setosa</td>
</tr>
<tr class="even">
<td style="text-align: right;">4.9</td>
<td style="text-align: right;">3.0</td>
<td style="text-align: right;">1.4</td>
<td style="text-align: right;">0.2</td>
<td style="text-align: left;">setosa</td>
</tr>
<tr class="odd">
<td style="text-align: right;">4.7</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">1.3</td>
<td style="text-align: right;">0.2</td>
<td style="text-align: left;">setosa</td>
</tr>
<tr class="even">
<td style="text-align: right;">4.6</td>
<td style="text-align: right;">3.1</td>
<td style="text-align: right;">1.5</td>
<td style="text-align: right;">0.2</td>
<td style="text-align: left;">setosa</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5.0</td>
<td style="text-align: right;">3.6</td>
<td style="text-align: right;">1.4</td>
<td style="text-align: right;">0.2</td>
<td style="text-align: left;">setosa</td>
</tr>
<tr class="even">
<td style="text-align: right;">5.4</td>
<td style="text-align: right;">3.9</td>
<td style="text-align: right;">1.7</td>
<td style="text-align: right;">0.4</td>
<td style="text-align: left;">setosa</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Configuring code chunk behavior
</div>
</div>
<div class="callout-body-container callout-body">
<p>Default behaviors for code chunks are to <strong><em>print the code</em></strong> (<code>echo: true</code>), to <strong><em>execute the code</em></strong> (<code>eval: true</code>), and to <strong><em>show the output produced by the code</em></strong> (<code>output: true</code>), including any <strong><em>warnings</em></strong> produced by the code (<code>warning: true</code>).</p>
<p>Any of these can be changed both at a website-wide or document-wide level, as well as at the level of individual code chunks (the latter would override the former).</p>
<p>To change <strong><em>settings at the site or document-level</em></strong>, use the <code>execute</code> key in your YAML file or header (see <a href="https://quarto.org/docs/reference/formats/html.html#execution">these Quarto docs</a>) — in the example below, we turn off printing of the code itself as well of any warnings that the code might produce:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">execute</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">echo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warning</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
<p>To change <strong><em>settings for an individual chunk</em></strong>, the same YAML keys like <code>echo</code> can be used, but in special comment lines (with <code>#|</code> prefixes) at the start of a code chunk:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/chunk_options.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p><strong>A really useful option is to “fold” the code by using <code>code-fold: true</code> in the YAML header.</strong> That way, code will not be shown by default, but can be shown for each individual code chunk by unfolding it. This is great when you want to emphasize your results, but do want make the underlying code available to anyone who might be interested.</p>
<p>For example, for the plot we produced above, if we set code-folding to true, it would produce a box like this above the plot — and clicking on that box would then show the code:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/code_fold.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
<p><br></p>
</section>
<section id="figures-and-tables" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="figures-and-tables"><span class="header-section-number">5</span> Figures and Tables</h2>
<section id="figures-images" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="figures-images"><span class="header-section-number">5.1</span> Figures / images</h3>
<p>Above, we saw that we can create plots and include them in the document. Of course, we can also include figures made elsewhere, or photos, etc — and you have probably already done this for your website. When inserting a figure (e.g.&nbsp;by clicking the picture icon in the top bar), you can for example include a caption and specify how you want it aligned:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/insert_figure.png" class="img-fluid figure-img" style="width:60.0%"></p>
</figure>
</div>
<p>Somewhat oddly, the options for the figure <strong>size</strong> only show up once you’ve clicked OK to insert the figure — you’ll see this box below the figure:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/size_figure.png" class="img-fluid figure-img" style="width:50.0%"></p>
</figure>
</div>
<p>There are different ways/units to size the figure: I prefer <strong>“%”</strong>, which will allow you to specify the width in percentage of the total page (or focal box) width, as shown above.</p>
</section>
<section id="tables" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="tables"><span class="header-section-number">5.2</span> Tables</h3>
<p>When Clicking “Insert Table” in the “Table” dropdown menu in the top bar, you’ll get a pop-up to create a table, similar to how this works in Word:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/table1.png" class="img-fluid figure-img" style="width:50.0%"></p>
</figure>
</div>
<p>This will produce a table skeleton like the one shown below, which you can then fill out:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/table2.png" class="img-fluid figure-img" style="width:70.0%"></p>
</figure>
</div>
<p>Here is an example of what a rendered table will look like, with previous Code Club sessions this semester:</p>
<table class="table">
<caption><em>Table 1: Previous Code Club sessions</em></caption>
<thead>
<tr class="header">
<th>Session</th>
<th>Date</th>
<th>Presenter</th>
<th>Link</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>S06E01</td>
<td>Aug 28</td>
<td>Jess</td>
<td><a href="../../posts/website_01_initiation/">Quarto website 1: <strong>Initiating a website</strong></a></td>
</tr>
<tr class="even">
<td>S06E02</td>
<td>Sep 11</td>
<td>Jelmer</td>
<td><a href="../../posts/website_02/">Quarto website 2: <strong>Adding a page &amp; YAML formatting</strong></a></td>
</tr>
<tr class="odd">
<td>S06E03</td>
<td>Sept 18</td>
<td>Jess</td>
<td><a href="../../posts/website_03_deploy-github/">Quarto website 3: <strong>Deploying to GitHub</strong></a></td>
</tr>
<tr class="even">
<td>S06E04</td>
<td>Sept 25</td>
<td>Jelmer</td>
<td><a href="../../posts/website_04/">Quarto website 4: <strong>Interacting with your repository</strong></a></td>
</tr>
<tr class="odd">
<td>S06E05</td>
<td>Oct 2</td>
<td>Jess</td>
<td><a href="../../posts/website_05">Quarto website 5: <strong>Modifying your site</strong></a></td>
</tr>
</tbody>
</table>
<p>These tables are fairly basic in their appearance and there aren’t many simple formatting options. If you’d like fancy or even interactive tables, you are better off creating them in R with packages like <a href="https://gt.rstudio.com/"><em>gt</em></a>, and then including them like we included part of the <code>iris</code> dataframe above.</p>
<p><br></p>
</section>
</section>
<section id="other-options" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="other-options"><span class="header-section-number">6</span> Other options</h2>
<section id="tabsets" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="tabsets"><span class="header-section-number">6.1</span> Tabsets</h3>
<p>“Tabsets” create a section with content spread across different “tabs”, kind of like tabs in your browser; you saw an example above, in the Citations section. Tabsets can help keep your document clear when you have many outputs, especially when there are <strong>alternative or mutually exclusive ways of showing something</strong>, like results from alternative statistical models you ran on your data, alternative ways of visualizing the same data, or installation instructions for different operating systems.</p>
<p>When you click “Insert” =&gt; “Tabset…”, you can first enter names for two or more tabs, and doing this will also determine how many tabs you’ll get (up to 6):</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/tabset1.png" class="img-fluid figure-img" style="width:65.0%"></p>
</figure>
</div>
<p>Then, inside the gray box, below each header that was created for each tab name, you can enter any content that will show up in each tab:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/tabset2.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
<p>And here is what the output for the above setup would look like:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Sepal length vs sepal width</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Sepal length vs petal length</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<div class="cell-output-display">
<p><img src="https://osu-codeclub.github.io/posts/website_06/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell">
<div class="cell-output-display">
<p><img src="https://osu-codeclub.github.io/posts/website_06/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</div>
</div>
<p><br></p>
</section>
<section id="callouts" class="level3" data-number="6.2">
<h3 data-number="6.2" class="anchored" data-anchor-id="callouts"><span class="header-section-number">6.2</span> Callouts</h3>
<p>So-called “Callouts blocks” are boxes that we regularly use on the Code Club website, like the ones shown below:</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Example of a “tip” callout box
</div>
</div>
<div class="callout-body-container callout-body">
<p>This tip will help you make the most of your life</p>
</div>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Example of a “warning” callout box
</div>
</div>
<div class="callout-body-container callout-body">
<p>This warning will help you avoid blowing up your computer</p>
</div>
</div>
<p>When you click “Insert” =&gt; “Callout..”, you can select one of the five types of available Callouts, which only differ in their colors and the symbol in the header (see these <a href="https://quarto.org/docs/authoring/callouts.html">Quarto docs</a>).</p>
<p><br></p>
</section>
<section id="miscellaneous" class="level3" data-number="6.3">
<h3 data-number="6.3" class="anchored" data-anchor-id="miscellaneous"><span class="header-section-number">6.3</span> Miscellaneous</h3>
<ul>
<li>In your Quarto document, rather than finding a formatting feature in the top bar, you can press <kbd>/</kbd> to see a list of features you can insert, which you can subset by typing some text:</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_06/img/insert.png" class="img-fluid figure-img" style="width:45.0%"></p>
</figure>
</div>
<ul>
<li>As is true for any Markdown format, you can directly include any HTML code/tags, like <strong><code>&lt;br&gt;</code></strong> <strong><em>to insert an empty line</em></strong> (i.e., to add vertical white space — see the box below) or <code>&lt;kbd&gt;Enter&lt;/kbd&gt;</code> to make text appear formatted as keyboard keys.</li>
</ul>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Whitespace in Markdown
</div>
</div>
<div class="callout-body-container callout-body">
<p>In all Markdown flavors, including Quarto, whitespace is dealt with differently than you may be used to:</p>
<ul>
<li><p>If you leave <strong>multiple spaces between words</strong>, those will be <strong>collapsed</strong> to a single space.</p></li>
<li><p>If you type on <strong>a new line without creating a new paragraph</strong> (in the Visual Editor, that would actually require you to use <kbd>Shift</kbd>+<kbd>Enter</kbd>, since Enter will start a new paragraph), the output would still be on the <strong>same line</strong>.</p></li>
<li><p>If you leave <strong>multiple blank lines between paragraphs</strong>, these will be <strong>collapsed</strong> to a single blank (half-)line. Therefore, if you want to add additional vertical whitespace, use the HTML tag <code>&lt;br&gt;</code>.</p></li>
</ul>
</div>
</div>
<p><br></p>
<section id="your-turn-again-try-to-use-some-of-the-features-discussed-above" class="level4 unnumbered exercise">
<h4 class="unnumbered anchored" data-anchor-id="your-turn-again-try-to-use-some-of-the-features-discussed-above">Your turn: Again, try to use some of the features discussed above</h4>
<ul>
<li>If you have time after trying some of the features we discussed, then read about ways of manipulating code chunk behavior in the box at the end of Section&nbsp;4, and try some of them.</li>
</ul>
</section>
<p><br></p>



</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-m.horst2022" class="csl-entry">
M. Horst, Allison, Alison Presmanes Hill, and Kristen B. Gorman. 2022. <span>“Palmer Archipelago Penguins Data in the Palmerpenguins R Package - An Alternative to Anderson’s Irises.”</span> <em>The R Journal</em> 14 (1): 244–54. <a href="https://doi.org/10.32614/rj-2022-020">https://doi.org/10.32614/rj-2022-020</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><strong><em>After reading this footnote, you’ll be exceptionally well-informed</em></strong>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>website</category>
  <category>quarto</category>
  <guid>https://osu-codeclub.github.io/posts/website_06/index.html</guid>
  <pubDate>Mon, 09 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/website_06/img/crossref.png" medium="image" type="image/png" height="42" width="144"/>
</item>
<item>
  <title>Quarto website 5: modifying your site</title>
  <dc:creator>Jessica Cooperstone</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_05/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_05/img/quarto-cartoon.png" class="img-fluid figure-img" style="width:70.0%" alt="A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto. Artwork from Hello, Quarto keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst"></p>
</figure>
</div>
</div>
</div>
<p>Artwork from <a href="https://mine.quarto.pub/hello-quarto/">“Hello, Quarto”</a> keynote by <a href="https://jules32.github.io/">Julia Lowndes</a> and <a href="https://mine-cr.com/">Mine Çetinkaya-Rundel</a>, presented at RStudio Conference 2022. Illustrated by <a href="https://allisonhorst.com/allison-horst">Allison Horst</a>.”</p>
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Today we are going to continue customizing our website by:</p>
<ol type="1">
<li>Making a fancy about page</li>
<li>Learning how to make multi-level drop down menu headers</li>
<li>Changing our website themeing in <code>_quarto.yml</code></li>
<li>Doing some light (S)CSS styling to change the visuals of our site</li>
</ol>
<p>Then, we will push our changes to GitHub using GitHub Desktop. But first:</p>
<div class="callout callout-style-simple callout-none no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<h4 class="anchored" data-anchor-id="introduction">
Are there other things you want to learn how to do with your website?
</h4>
<p>
Please share!
</p>
</div>
</div>
</div>
<p>A good way to see what is possible to do with your website is to browse through some other people’s sites. There is a Quarto website gallery <a href="https://quarto.org/docs/gallery/#websites">here</a>. Just like people can access the source code on your website, you can often do the same for others. This means if you see a feature you like, you can go into their website code and try and figure out how its done.</p>
</section>
<section id="updating-our-about-page" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Updating our About page</h1>
<p>Because many people who have a Quarto website will have an About page, there are some special, nicely formatted templates which you can use. You can learn more about fancy about pages <a href="https://quarto.org/docs/websites/website-about.html">here</a>, inclduing seeing what the different templates look like.</p>
<p>We are going to practie with our Code Club <a href="https://osu-codeclub.github.io/practice-website/">practice-website</a>.</p>
<p>First, let’s set one of the about templates in the YAML of our <code>about.qmd</code> file. I am going to start with <code>jolla</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"About me"</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">about</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> jolla</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> name_of_image.jpg</span></span></code></pre></div>
<p>Before we render this page, we need to make sure the image we want to appear in this about page is in the home directory of your website. If you want to keep all your images in a subfolder so they’re not just floating around loose, you can. And then your YAML will look like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"About me"</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">about</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> jolla</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # could also use trestles, solana, marquee, broadside</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> img/name_of_image.jpg</span></span></code></pre></div>
<p>If you want to use some of the other templates, like <code>trestles</code>, <code>solana</code>, <code>marquee</code>, and <code>broadside</code>, you will want to have other information in your <code>about.qmd</code>, perhaps sections on Education and Experience.</p>
<p>Check out using these different templates and pick the one you like the most if you want to customize your about page.</p>
</section>
<section id="creating-multi-level-drop-down-menu-headers" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Creating multi-level drop down menu headers</h1>
<p>Earlier I mentioned we can go into other websites to see how different features are coded. We are going to do this on the <a href="https://osu-codeclub.github.io/">OSU Code Club website</a> to see how it has achieved having multi-level headers. We can also visit the <a href="https://github.com/osu-codeclub/osu-codeclub.github.io/tree/main">source repository</a> on GitHub to see how this website is formatted.</p>
<p>If you look at the Code Club website homepage, you can see that the header “New here?” has a drop down, and allows you to choose from a few different options.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_05/img/new-here.png" class="img-fluid"></p>
<p>How was that done? If you remember back a few sessions ago, <a href="https://osu-codeclub.github.io/posts/website_02/#modifying-the-_quarto.yml-file">we set what our headers were going</a> to be in the <code>_quarto.yml</code> file. Let’s see what that file looks like from the Code Club source repo.</p>
<p>The <code>_quarto.yml</code> looks like this:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preview</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navigate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OSU Code Club"</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">site-url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://osu-codeclub.github.io/</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo-url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/osu-codeclub/osu-codeclub.github.io</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo-actions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">edit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> issue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-navigation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">back-to-top-navigation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pages/schedule.qmd</span></span>
<span id="cb3-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Schedule</span></span>
<span id="cb3-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pages/previous.qmd</span></span>
<span id="cb3-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Previous sessions</span></span>
<span id="cb3-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> New here?</span></span>
<span id="cb3-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Computer setup for Code Club</span></span>
<span id="cb3-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pages/setup.qmd</span></span>
<span id="cb3-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> R resources for beginners</span></span>
<span id="cb3-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pages/r_resources.qmd</span></span>
<span id="cb3-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Sign up!</span></span>
<span id="cb3-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://forms.gle/eYkMvmJShrcANUrt5</span></span></code></pre></div>
<p>Looking at this we can see what code is used for make drop down headers. You can copy this code into your <code>_quarto.yml</code> and then modify the text and href to be appropriate for your site.</p>
<p>Remember that when you link to new pages, you will need to have material for that page to populate. If we look at the example above, the “Computer setup for Code Club” material is in a file called <code>setup.qmd</code> in a folder called <code>pages</code> in the home directory of the website.</p>
</section>
<section id="altering-website-styling-in-_quarto.yml" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Altering website styling in <code>_quarto.yml</code></h1>
<p>Making simpler changes, like setting your background colors and fonts, you can do by altering your <code>_quarto.yml</code> file under the <code>format</code> header. For example, we could make the following changes to our practice-website.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#06280C"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # foresty green</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flatly</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number-sections</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainfont</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Proxima Nova</span></span>
<span id="cb4-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">backgroundcolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CFDAD3"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # light grey</span></span>
<span id="cb4-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">monobackgroundcolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CFDAD3"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # light grey</span></span>
<span id="cb4-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#06280C"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # foresty green</span></span>
<span id="cb4-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner-color</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CFDAD3"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # light grey</span></span>
<span id="cb4-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontcolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#06280C"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # foresty green</span></span>
<span id="cb4-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">linkcolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0E11E2"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # hyperlink blue</span></span></code></pre></div>
<p>You don’t need to comment on what your colors are, I just like to do this since I have no connection between hexadecimal codes and actual colors, and this helps me to remember what is what. You can see all of the html options you can change within your YAML <a href="https://quarto.org/docs/reference/formats/html.html">here</a></p>
<p>Once you made changes, render your website to see what they look like.</p>
</section>
<section id="altering-scss-code-to-change-website-styling" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Altering (S)CSS code to change website styling</h1>
<p>Sometimes you might want to make more changes that what you can do using the avaiable keys in your YAML. When that is the case, you can make additional alterations by creating a <code>.scss</code> theme file.</p>
<p>CSS stands for Cascading Style Sheets and it is used to format the layout of a webpage. By learning how to modify existing CSS files, it is relatively simple to change how your website looks. SCSS is Sassy CSS and the difference is not really important right now, but I think the <code>.scss</code> files are a little easier to modify, and are the default in Quarto, so we are going to work from those.</p>
<p>The Quarto website built in themes use <a href="https://bootswatch.com/">Bootswatch</a> and both the Code Club and practice-website use flatly so let’s start there. You can find <code>.scss.</code> files for each theme in the Quarto GitHub source repo <a href="https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/html/bootstrap/themes">here</a>. I am going to go to the flatly theme and download it using the “Download raw file” button in the top right of the page. Save this file in the home directory of your website.</p>
<p><img src="https://osu-codeclub.github.io/posts/website_05/img/download-scss.png" class="img-fluid"></p>
<p>Let’s open it in RStudio. We will play around with making some changes.</p>
<p>One thing you might want to change first are the colors. Quarto accepts color information as hexadecimal codes. If you want to know the hexadecimal 6 digit code for any color you can go to <a href="https://htmlcolorcodes.com/">www.htmlcolorcodes.com</a> to find the color/code pair that you want.</p>
<p>In the <a href="https://quarto.org/docs/output-formats/html-themes.html#sass-variables">Quarto documentation</a>, you can find information about the Sass variables that can be specified within your <code>.scss.</code> file what what they mean.</p>
</section>
<section id="commit-and-push-to-github" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Commit and push to GitHub</h1>
<p>Once you are happy with your changes, the last step is to commit and push them to GitHub so the changes can be reflected on your website. You can do this in GitHub desktop by entering a comment in the bottom left, committing to main (or master), and then push to origin.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>website</category>
  <category>git</category>
  <guid>https://osu-codeclub.github.io/posts/website_05/index.html</guid>
  <pubDate>Mon, 02 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/website_05/img/quarto-cartoon.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Quarto website 4</title>
  <dc:creator>Jelmer Poelstra</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_04/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<p>We are continuing this semester’s Code Club series on making yourself a website. <strong>So far</strong>, we have gone through:</p>
<ul>
<li>How to <a href="../../posts/website_01_initiation/">create your site</a></li>
<li>How to <a href="../../posts/website_02/#adding-a-new-page-to-your-site">add a page to your site</a></li>
<li>How to <a href="../../posts/website_02/#modifying-the-yaml-header-of-our-new-page">customize your site’s look</a></li>
<li>How to <a href="../../posts/website_03_deploy-github/">publish your site using Git and GitHub</a></li>
</ul>
<p><strong>Today</strong>, we are going to focus on interacting with our GitHub repository (or “repo” for short):</p>
<ul>
<li>We’ll start with a recap on Git and GitHub repositories</li>
<li>For those of you who would like to have a shorter URL for your website, we’ll change your GitHub repository name</li>
<li>We’ll add some info to our repository, including a README file</li>
<li>We’ll practice with saving your local updates and pushing them to remote</li>
<li>If time allows, we’ll add links to your repo on your website</li>
</ul>
<p><br></p>
<section id="git-and-github-repository-recap" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="git-and-github-repository-recap"><span class="header-section-number">1</span> Git and GitHub repository recap</h2>
<p>Now that you have actually created a local Git and a remote GitHub repository for your website, let’s revisit this illustration that Jess explained last week:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/github-cartoon.png" class="img-fluid figure-img" style="width:70.0%"></p>
<figcaption class="figure-caption">Figure by <a href="https://github.com/allisonhorst/stats-illustrations">Allison Horst</a></figcaption>
</figure>
</div>
</div>
</div>
<p>And here is a graphic depicting our workflow more specifically, where we basically have a fourth area: the actual website.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/github_overview.png" class="img-fluid figure-img" style="width:85.0%"></p>
</figure>
</div>
</div>
</div>
<p>Let’s go through the four different “areas” in this illustration and how they interact:</p>
<ul>
<li>Your <strong>working directory<sup>1</sup></strong> (bottom right in the illustration) is the folder on your computer that contains all the files for your website. Within that folder:
<ul>
<li>The <code>docs</code> folder contains HTML and other files representing your <em>rendered website</em></li>
<li>Everything else (<code>.qmd</code>, <code>.yml</code> etc.) is the <em>source code for your website</em></li>
</ul>
In the workflow we are showing you here, you’re modifying the files in your working directory predominantly <strong>using RStudio</strong>.</li>
</ul>
<ul>
<li><p>Your <strong>local Git repo</strong> (bottom left in the illustration) contains one or more saved snapshots (versions through time) of your working directory.</p>
<p>The most recent snapshot of the local repo does not <em>necessarily</em> correspond to the state of your working directory: there is purposefully no auto-saving, so saving a snapshot (i.e.&nbsp;<code>commit</code>ing) is something you always have to actively do<sup>2</sup>.</p>
<p>Saving a snapshot of the current state of your working dir can be done in a number of ways, such as using Git commands in a terminal (the <code>add</code> and <code>commit</code> verbs in the illustration) or using the Git pane in RStudio, but the method we have shown you here uses the <strong>GitHub Desktop app</strong>.</p></li>
</ul>
<ul>
<li><p>Your <strong>remote GitHub repo</strong> (top in the illustration) is simply the <em>online counterpart of your local repo</em>.</p>
<p>Just like changes to your working dir aren’t automatically saved to your local repo, new snapshots in your local repo aren’t automatically published to your remote repo: to do so, we have to <code>push</code> our changes online. (The counterpart to <code>push</code> is <code>pull</code>, which we won’t talk more about here, will pull in changes from the online repo to your local repo.<sup>3</sup>)</p>
<p>Just like for committing, we will use <strong>GitHub Desktop</strong> to push our changes online.</p></li>
<li><p>We “activated” the <strong>website</strong> area last week using some settings for the online repo. Therefore, we don’t have to think much about this aspect – there basically is an <em>automatic connection between the remote repo and the website</em>: GitHub will detect whenever we’ve changed our online repo, and will update the website for us.</p></li>
</ul>
<p><strong>In summary,</strong> <strong>when you have made changes to your website that you would like to put online,</strong> <strong>go to GitHub Desktop to save a snapshot to your local repo (i.e., to commit)</strong> <strong>and then push those changes to your remote (online) repo.</strong> GitHub will then detect the changes to your online repo and update your website.</p>
<p>We will practice this routine today.</p>
<p><br></p>
</section>
<section id="changing-the-url-to-your-website" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="changing-the-url-to-your-website"><span class="header-section-number">2</span> Changing the URL to your website</h2>
<p>The URLs to your repository and website are automatically determined based on your GitHub username and repo name as follows:</p>
<ul>
<li>Website: <code>https://&lt;github-username&gt;.github.io/&lt;github-repo-name&gt;</code></li>
<li>GitHub repo: <code>https://github.com/&lt;github-username&gt;/&lt;github-repo-name&gt;</code></li>
</ul>
<p>For instance, the Code Club practice website is under the GitHub username <code>osu-codeclub</code> and the repository name <code>practice-website</code>, and therefore, it has the following URLs:</p>
<ul>
<li>GitHub repo: <a href="https://github.com/osu-codeclub/practice-website" class="uri">https://github.com/osu-codeclub/practice-website</a></li>
<li>Website: <a href="https://osu-codeclub.github.io/practice-website" class="uri">https://osu-codeclub.github.io/practice-website</a></li>
</ul>
<p>However, the main Code Club website has a shorter URL that only contains the GitHub username: <a href="https://osu-codeclub.github.io" class="uri">https://osu-codeclub.github.io</a>. You, too, can change your website’s URL so that it only contains your GitHub username.</p>
<ul>
<li>If you’re making a personal website, you’ll likely want to make this change.</li>
<li>If you’re making a website covering a specific topic or project, and could see yourself making other similar websites, this URL change doesn’t make as much sense.</li>
</ul>
<p>How can you get such an URL for your website? <strong>You can do so by giving your GitHub repo the name <code>&lt;github-username&gt;.github.io</code>.</strong></p>
<p><i class="fa-solid fa-user-edit" aria-label="user-edit"></i> So, for whoever would like to have the shorter URL format, let’s change the GitHub repo name to your GitHub username. In your GitHub repository, click “Settings”:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/settings.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
</div>
</div>
<p>Then, right at the top of the General page (the one that should open by default), click inside the “Repository name” box, and you’ll notice that you can type to change the name. The new name of the repo should by your GitHub username (which should e.g.&nbsp;show in the URL to your repo) followed by <code>.github.io</code>. For example, if your username is <code>lucy</code>, your new repo name should be <code>lucy.github.io</code>. After you’ve typed the new name, click the “Rename” button:xxx</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/rename.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">You can type directly in the box to change the repo’s name</figcaption>
</figure>
</div>
</div>
</div>
<p>That should send you back to your repository’s main page, and if all went well, your URL should have been updated immediately. To check this, you can go back to your repo’s settings and then click on “Pages” on the left-hand side, as shown below:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/check_pages.png" class="img-fluid figure-img" style="width:95.0%"></p>
<figcaption class="figure-caption">On the GitHub Pages page, you can check the URL to your site</figcaption>
</figure>
</div>
</div>
</div>
<p><br></p>
</section>
<section id="adding-about-info-and-a-readme" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="adding-about-info-and-a-readme"><span class="header-section-number">3</span> Adding About info and a README</h2>
<section id="about" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="about"><span class="header-section-number">3.1</span> About</h3>
<p>While we’re making edits on GitHub, let’s first add a very brief description of our repo, and the URL to the website, to the “About” section on the main page of your repo.</p>
<p><i class="fa-solid fa-user-edit" aria-label="user-edit"></i> Click the cog wheel icon shown below, and then:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/about1.png" class="img-fluid figure-img" style="width:45.0%"></p>
</figure>
</div>
</div>
</div>
<ul>
<li><p>Enter a one-sentence description of your repo in the “<em>Description</em>” box.</p></li>
<li><p>Below “<em>Website</em>”, you can simply check the box “<em>Use your GitHub Pages website</em>” to add your website’s URL to this About section.</p></li>
</ul>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/about2.png" class="img-fluid figure-img" style="width:75.0%"></p>
</figure>
</div>
</div>
</div>
<p>Now, your About section should look something like this:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/about3.png" class="img-fluid figure-img" style="width:45.0%"></p>
</figure>
</div>
</div>
</div>
<hr>
</section>
<section id="readme" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="readme"><span class="header-section-number">3.2</span> README</h3>
<p>Next, let’s add a README file to our repo.</p>
<p>If we create a file that is called e.g.&nbsp;<code>README</code> or <code>README.md</code> in the top-level folder of our repo, GitHub will automatically show it (in <em>rendered</em> form, if the file is written in Markdown) on the main page of our repository. Besides the About section, this is another customary way you can make it clear to people that visit your repo on GitHub, what this repo is all about.</p>
<p>Unlike the changes we made so far today (our website URL, the About info), <strong>creating a README file will actually modify the contents of our repo</strong>. Therefore, it will be easiest to create this file on our own computer, commit it to our local repo, and push the changes to the remote repo<sup>4</sup>.</p>
<section id="your-turn-create-a-readme-file-for-your-websites-repo" class="level4 unnumbered exercise">
<h4 class="unnumbered anchored" data-anchor-id="your-turn-create-a-readme-file-for-your-websites-repo">Your turn: Create a README file for your website’s repo</h4>
<ul>
<li><p>Switch to your RStudio window with your website RStudio project open, then click on “File” =&gt; “New File” =&gt; “Markdown File” (halfway down).</p></li>
<li><p>If the new file doesn’t automatically open in “Visual” mode, you can click the “Visual” button to do so, unless you would like to practice with Markdown syntax.</p></li>
<li><p><strong>Save the file</strong> straight away as <code>README.md</code>, in the top-level folder where you also have, e.g., the <code>_quarto.yml</code> file.</p></li>
<li><p><strong>Add some text</strong> to the file, which can be as long or short as you want; you’ll mostly just want to make it clear (again) that this repo is the source for your website. For example, I’ll add for this practice website:</p></li>
</ul>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode md code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## This is the repository for a practice website part of OSU's Code Club</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">- </span>OSU Code Club: <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;https://osu-codeclub.github.io&gt;</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">- </span>OSU Code Club practice website: <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;https://osu-codeclub.github.io/practice-website&gt;</span></span></code></pre></div>
</section>
<p><br></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Your README plain Markdown file
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p>The “README” in the filename doesn’t have to be in all-caps, but this is customary.</p></li>
<li><p>The <code>.md</code> extension stands for (plain) Markdown, as opposed to Quarto Markdown (<code>.qmd</code>) or R Markdown (<code>.Rmd</code>). The difference between plain Markfown and Quarto/R Markdown files is that the latter can <em>execute code</em> (usually but not limited to R code).</p>
<p>An interesting side note is that the conversion of a <code>.qmd</code>/<code>.Rmd</code> file to the final output file (HTML in our case, could e.g.&nbsp;also be PDF) takes place in <em>two steps</em>: first, it is rendered to <code>.md</code>, which is then rendered to the final output format.</p></li>
</ul>
</div>
</div>
<p><br></p>
</section>
</section>
<section id="updating-the-online-repo" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="updating-the-online-repo"><span class="header-section-number">4</span> Updating the online repo</h2>
<p>Now that we have made changes to our “working directory” by adding a README file, we should commit these changes to our local repo and then push them to the remote repo. For that, we’ll <strong>switch to GitHub Desktop</strong>.</p>
<p><i class="fa-solid fa-user-edit" aria-label="user-edit"></i> When you open GitHub Desktop, it should automatically focus on your website’s repo, and you should see a bunch of changes listed in the left-hand panel.</p>
<p>To commit all of these changes at once, focus on the bottom-left part, where you can leave the “<em>Description</em>” box empty, but you <strong>have to</strong> fill out something in the “<em>Summary (required)</em>” box, which should ideally summarize the changes you just made, e.g.:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/commit.png" class="img-fluid figure-img" style="width:55.0%"></p>
<figcaption class="figure-caption">After entering something in the Summary box, click ‘Commit to main’</figcaption>
</figure>
</div>
</div>
</div>
<p>Then, click on the large blue “<em>Commit to main</em>” button (this button may also say “<em>Commit to master</em>”) to commit your changes to your local repo.</p>
<p>Next, the following should appear in the main GitHub Desktop pane, and you can click “<em>Push origin</em>”:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/push.png" class="img-fluid figure-img" style="width:70.0%"></p>
<figcaption class="figure-caption">Click ‘Push origin’ to push your local repo changes to remote</figcaption>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Git terminology
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p>The “master” or “main” in e.g.&nbsp;“<strong>Commit to main</strong>” refers to a specific so-called branch of your repository. With Git version control, it is for example common to work on experimental changes in your code in a separate (non-main) branch, so that your code in main keeps working in the meantime.</p></li>
<li><p>“Origin” is the default name that is given to the default connection with your remote repo, so “<strong>Push origin</strong>” means push to the default remote repo.</p></li>
</ul>
</div>
</div>
<p><br></p>
<hr>
<p>Let’s switch to our repo page on GitHub in our browser, where we should immediately see our new commit referenced at the top:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/commit_on_gh.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="figure-caption">You should see your changes referred to in the online repo</figcaption>
</figure>
</div>
</div>
</div>
<p>And if you scroll down, the <code>README.md</code> should appear in rendered form below the file listing:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/readme.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="figure-caption">GitHub will render and display a README file in your repo automatically</figcaption>
</figure>
</div>
</div>
</div>
<p>Finally, a couple of things to note about what we just did:</p>
<ul>
<li><p>Unlike most changes you’ll make to your repo, this change did not affect our website at all.</p></li>
<li><p>We can freely change our GitHub repo name without having to change the name of our folder with the website: these two can be the same, but they can also differ.</p></li>
</ul>
<p><br></p>
</section>
<section id="referencing-our-repo-on-the-website" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="referencing-our-repo-on-the-website"><span class="header-section-number">5</span> Referencing our repo on the website</h2>
<p>Finally, we can <strong>reference our GitHub repo on our website</strong> in two ways, by making changes in our <code>_quarto.yml</code>.</p>
<p>First, we can add a GitHub icon to the right-hand end of our top navigation bar, which will link to our GitHub repom as follows:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/osu-codeclub/practice-website"</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github</span></span></code></pre></div>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/repo_link.png" class="img-fluid figure-img" style="width:40.0%"></p>
<figcaption class="figure-caption">Making the change above should produce this icon in the navbar on your website</figcaption>
</figure>
</div>
</div>
</div>
<p>Second, we can add one or two “repo actions” links to the Table of Contents that on each page on our website, which will allow people to:</p>
<ul>
<li><p>Action <code>issue</code>: Report an “issue” on GitHub, e.g.&nbsp;report that a link on your site is broken. This will open a new so-called <em>issue for your repo</em> – you should get an email when this happens.</p></li>
<li><p>Action <code>edit</code>: Make a suggestion for a change (“Edit this page”), e.g.&nbsp;fix the broken link. This will open a new so-called <em>pull request for your repo</em>, and you can choose whether you want to accept this request, in which case it should automatically update your repo and website.</p></li>
</ul>
<p>If you want both of these type of links, you should add the following to your <code>_quarto.yml</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo-url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/osu-codeclub/osu-codeclub.github.io</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo-actions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">edit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> issue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_04/img/repo_actions.png" class="img-fluid figure-img" style="width:40.0%"></p>
<figcaption class="figure-caption">Making the change above should produce these entries in the TOC of every page on your website</figcaption>
</figure>
</div>
</div>
</div>
<section id="your-turn-update-_quarto.yml-and-get-the-changes-to-your-website" class="level4 unnumbered exercise">
<h4 class="unnumbered anchored" data-anchor-id="your-turn-update-_quarto.yml-and-get-the-changes-to-your-website">Your turn: update <code>_quarto.yml</code> and get the changes to your website</h4>
<ol type="1">
<li><p>Make some or all of the suggested changes to your <code>_quarto.yml</code> file.</p></li>
<li><p>Render your <em>entire website</em>, so the changes will be included in the website’s HTML files in your <code>docs</code> folder. (Recall that to render your full website, as opposed to a single document, click the “Render Website” button in <strong>RStudio’s “Build” Tab</strong>.)</p></li>
<li><p>Go to GitHub Desktop and commit the changes to your local repo.</p></li>
<li><p>Still in GitHub Desktop, push the changes to your remote repo.</p></li>
<li><p>Go to you GitHub repo, and check that you see your most recent push.</p></li>
<li><p>Go to / refresh your website, and see if the changes are there. (You may have to wait a minute or so.)</p></li>
</ol>
</section>
<p><br></p>


</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Directory (or “dir” for short) is just another word for a folder on your computer.↩︎</p></li>
<li id="fn2"><p>It is also possible to save to a snapshot with only <em>some</em> of the changes that you’ve made to your working dir: you can <code>add</code> changed files individually rather than all at once, too.↩︎</p></li>
<li id="fn3"><p>Pulling in changes from the online repo is only relevant either when you are collaborating with others on a repo, such that sharing of changes happens via the online repo, or when you have made changes directly to the online repo (this is possible but generally not recommended).↩︎</p></li>
<li id="fn4"><p>Alternatively, we could create and write this file directly on the GitHub website, but if we would do this, we would need to “pull” in these changes from remote, which is something we won’t cover here.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>website</category>
  <guid>https://osu-codeclub.github.io/posts/website_04/index.html</guid>
  <pubDate>Mon, 25 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/website_04/img/github_overview.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Quarto website 3: Deploying your website with GitHub 🐱</title>
  <dc:creator>Jessica Cooperstone</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_03_deploy-github/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>We are continuing this semester’s Code Club series on making yourself a website. So far, we have gone through:</p>
<ol type="1">
<li>How to <a href="https://osu-codeclub.github.io/posts/website_01_initiation/">initiate your site</a></li>
<li>How to <a href="https://osu-codeclub.github.io/posts/website_02/#adding-a-new-page-to-your-site">add content</a></li>
<li>How to <a href="https://osu-codeclub.github.io/posts/website_02/#modifying-the-yaml-header-of-our-new-page">customize its look</a></li>
</ol>
<p>Today, we are going to take our website live, with the help of GitHub, Github Desktop, and Github Pages. You can find all the <a href="https://github.com/osu-codeclub/practice-website">source code</a> for this <a href="https://osu-codeclub.github.io/practice-website/">practice website</a> on GitHub.</p>
<p>The book <a href="https://happygitwithr.com/">Happy Git and GitHub for the useR</a> is a super good resource by Jenny Bryan that talks about all this in extreme detail. Some of my materials below are inspired by some of this material.</p>
<section id="what-is-git" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="what-is-git"><span class="header-section-number">1.1</span> What is Git?</h2>
<p><a href="https://git-scm.com/">Git</a> is a version control system that allows materials (mostly code), in an organized way where changes are tracked. You can think of it as combining the tracked changes capabilities of Word, with the file sharing from OneDrive.</p>
<p>We are going to use Git (combined with GitHub, more on that in a second) to deploy our website, but it can also be used to share and make code available to collaborators or the wider data science community. You could even use Git for just yourself because it would allow you to always revert back to a previous version of any of your files in case you make a big mistake.</p>
<p>Here is a nice illustration by <a href="https://allisonhorst.com/allison-horst">Allison Horst</a> that shows the basics of git (at least the basics of what we will be using).</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/github-cartoon.png" class="img-fluid figure-img" style="width:70.0%" alt="A basic git workflow represented as two islands, one with local repo and working directory, and another with remote repo. Bunnies move file boxes from the working directory to the staging area, then with Commit move them to the local repo. Bunnies in rowboats move changes from the local repo to the remote repo (labeled PUSH) and from the remote repo to the working directory (labeled PULL). Art by Allison Horst"></p>
<figcaption class="figure-caption">Figure from <a href="https://github.com/allisonhorst/stats-illustrations">Allison Horst</a></figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="what-is-github" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="what-is-github"><span class="header-section-number">1.2</span> What is GitHub?</h2>
<p><a href="https://github.com/">GitHub</a> hosts Git-based projects. GitHub can be free (especially for academic projects), and is where we house all our <a href="https://github.com/osu-codeclub/osu-codeclub.github.io">Code Club content</a>. I additionally use GitHub in my lab for <a href="https://github.com/CooperstoneLab">creating code repositories that go along with our publications</a>.</p>
</section>
<section id="what-is-github-pages" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="what-is-github-pages"><span class="header-section-number">1.3</span> What is GitHub Pages?</h2>
<p><a href="https://pages.github.com/">GitHub Pages</a> is a tool allows you to host your website directly from a GitHub repository.</p>
</section>
<section id="what-is-github-desktop" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="what-is-github-desktop"><span class="header-section-number">1.4</span> What is GitHub Desktop?</h2>
<p><a href="https://desktop.github.com/">GitHub Desktop</a> is a application that lets you use Git and GitHub in a less-scary-than-working-in-your-terminal way. <a href="https://www.simplilearn.com/how-to-use-github-desktop-tutorial-article">Here</a> is a longer tutorial on how to use GitHub desktop.</p>
</section>
</section>
<section id="set-output-directory-in-yaml-to-docs" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Set output directory in YAML to docs</h1>
<p>The first thing we want to do, is make a change in your <code>_quarto.yml</code> file to what the output directory of the site is, so it is more compatible with GitHub Pages.</p>
<p>Go into your <code>_quarto.yml</code> and under <code>project:</code>, set <code>output-dir: docs</code>, like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output-dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docs</span></span>
<span id="cb1-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>What this does is change where the compiled website goes.</p>
<p>There are <a href="https://quarto.org/docs/publishing/github-pages.html">three different ways you can publish Quarto websites to GitHub pages</a>, but the one I am going over here is the simplest.</p>
<p>Be sure to build your page now by going to the Build tab in the top right quadrant, and click Render Website.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/render-website.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the Build tab in RStudio</figcaption>
</figure>
</div>
</section>
<section id="install-git" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Install Git</h1>
<p>If you don’t already have Git, download and install it: <a href="https://git-scm.com/downloads" class="uri">https://git-scm.com/downloads</a>.</p>
</section>
<section id="create-a-github-account" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Create a GitHub account</h1>
<p>In order to connect have your site hosted with GitHub and GitHub Pages, you need a GitHub account.</p>
<p>Create a GitHub account by going to <a href="https://github.com/join">github.com/join</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/create-gh-account.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of getting a GitHub account</figcaption>
</figure>
</div>
<p>You will have to pick a username - remember that other people will see this username so use one you’d feel comfortable with. <a href="https://happygitwithr.com/github-acct.html">Here</a> is some advice for picking a username.</p>
</section>
<section id="install-github-desktop-and-link-it-to-your-account" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Install GitHub Desktop and link it to your account</h1>
<p>We are going to interface with GitHub via Github Desktop because I think this is the easiest way to do it. It is definitely not the only way.</p>
<p>First download GitHub Desktop and install it: <a href="https://desktop.github.com/" class="uri">https://desktop.github.com/</a></p>
<p>Open GitHub Desktop and log into your GitHub account by going to <code>Preferences</code> &gt; <code>Accounts</code> &gt; <code>Sign in</code></p>
</section>
<section id="add-version-control-to-your-website-project" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Add version control to your website project</h1>
<p>Make sure that your website project is open in RStudio. Then go to <code>Tools</code> &gt; <code>Version Control</code> &gt; <code>Project Setup</code>. We will use Git as our version control system, and will confirm a new git repository.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/add-version-control.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of adding a GitHub repo</figcaption>
</figure>
</div>
</section>
<section id="add-your-repository-in-github-desktop-and-publish-it" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Add your repository in GitHub Desktop and publish it</h1>
<p>Now we are going to link this project that has version control with GitHub Desktop.</p>
<p>In GitHub Desktop, click <code>File</code> &gt; <code>Add Local Repository</code>, select your website’s top-level folder, and click <code>Add Repository</code>. This repo is now added to GitHub desktop. Still in GitHub Desktop, click the large <code>Publish repository</code> button towards the top. Uncheck the <code>Keep this code private</code> box and click <code>Publish Repository</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/publish_repo.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of publishing your repo in Github desktop</figcaption>
</figure>
</div>
</section>
<section id="commit-and-push-your-website-to-github" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Commit and push your website to GitHub</h1>
<p>Still in GitHub Desktop,r click the refresh button at the top middle. You should see a bunch of files (all those that comprise your website) under Changes in the tab on the left side.</p>
<p>We are going to now commit our files along with a comment on what we are doing in the bottom left of GitHub desktop. Once you’ve written your comment, press Commit to main. This sends your files to your local repo.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/initial-commit.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the initial commit in GitHub desktop</figcaption>
</figure>
</div>
<p>Once you’ve done that, click <code>Push origin</code> in the top right. This sends your files from your local repository to GitHub. Note that in the screenshot below there are no files indicated under changes, since I’ve already committed them.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/push-origin.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of pushing to origin in GitHub desktop</figcaption>
</figure>
</div>
<p>Nice! Now we should be able to see your website in your GitHub repo. Navigate there in your browser and check. The website files should be there.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/gh-repo-created.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of what our repo looks like on GitHub.com</figcaption>
</figure>
</div>
</section>
<section id="set-github-pages-to-deploy-from-docs" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Set GitHub Pages to deploy from docs</h1>
<p>The last thing we need to do to get our website to render is to change some settings for GitHub Pages.</p>
<p>In your repo, click on the Settings button in the top right of the page. Then click on the Pages tab on the left. Under Branch, we want to set our page to:</p>
<ul>
<li>build from main</li>
<li>and render from the /docs folder</li>
</ul>
<p>Then click Save.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/gh-settings-pages.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the settings for GitHub pages to render from docs</figcaption>
</figure>
</div>
<p>Refresh your page and you should now be able to visit your site! There will be a link at the top of the page. You did it!! Check out your new site.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/visit-site.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the settings for GitHub pages to render from docs</figcaption>
</figure>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>website</category>
  <category>git</category>
  <guid>https://osu-codeclub.github.io/posts/website_03_deploy-github/index.html</guid>
  <pubDate>Mon, 18 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/website_03_deploy-github/img/github-cartoon.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Quarto website 2</title>
  <dc:creator>Jelmer Poelstra</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_02/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<p>In today’s session, you will add a new page to the website that you created in the first session.</p>
<p>Then, we will talk about the “YAML” markup mini-language that is used to configure your website, and will make some changes to the YAML header for your new page <em>and</em> the YAML in the <code>_quarto.yml</code> file with site-wide settings.</p>
<p><br></p>
<section id="adding-a-new-page-to-your-site" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="adding-a-new-page-to-your-site"><span class="header-section-number">1</span> Adding a new page to your site</h2>
<p>Let’s create a new page for your site. If you already have an idea for a page that you would like to add to your site, you can go with that. Otherwise, you can follow along with my example, which will be <strong>a page about research projects on a personal website</strong>.</p>
<p>Each page on your website has a corresponding <code>.qmd</code> source document. Currently, we just have two pages:</p>
<ul>
<li>A home page, for which <code>index.qmd</code> is the source.</li>
<li>An “about page”, for which <code>about.qmd</code> is the source.</li>
</ul>
<p><strong>So, to create a new page, we will create a new Quarto document</strong> — in RStudio, click <code>File</code> =&gt; <code>New File</code> =&gt; <code>Quarto Document</code>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/new_file.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">The window to create a new Quarto document</figcaption>
</figure>
</div>
<p>Unlike last week, make sure the <strong>“Use visual markdown editor” box is checked</strong>, and then click the “Create Empty Document” button in the bottom left.</p>
<p>Once the file has been created, let’s save it straight away: press <kbd>Ctrl</kbd>/<kbd>Cmd</kbd>+<kbd>S</kbd>. <strong>Save it in the top-level folder for your website</strong>, i.e.&nbsp;the same folder that contains <code>index.qmd</code> and <code>about.qmd</code>. If you’re making a page for which you have your own ideas, you can name it accordingly — otherwise, save it as <strong><code>research.qmd</code></strong>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/new_page.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="figure-caption">Your near-empty document should look something like this</figcaption>
</figure>
</div>
<p>The newly created document will only contain a few lines, as shown in the screenshot above. This is the so-called “<strong>YAML header</strong>”.</p>
<p>We talked a bit about the YAML “markup language” last week, mostly in the context of the <code>_quarto.yml</code> file, which consists <em>only</em> of YAML content, unlike this <code>.qmd</code> file. Let’s dive a little deeper into YAML, because it’s one of the key components of your website’s source.</p>
<p><br></p>
</section>
<section id="a-little-more-about-yaml" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="a-little-more-about-yaml"><span class="header-section-number">2</span> A little more about YAML</h2>
<p>YAML (“YAML Ain’t Markup Language”, a silly joke of a name) is a simple format commonly used for <strong>configuration</strong>. In the source files for your website, there is a lot of YAML content straight away.</p>
<p>First, you have the <code>_quarto.yml</code> file that configures your website, including its navigation elements that are visible on every page of the site, like the “navbar” at the top. But there is also YAML in the headers of all <code>.qmd</code> files. For example, the top of our newly created <code>research.qmd</code> should read:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Untitled"</span></span>
<span id="cb1-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>As opposed to the <code>_quarto.yml</code> file, this YAML header:</p>
<ul>
<li>Is surrounded by lines that only contain three dashes <code>---</code>, that mark the beginning and the end of this YAML header.</li>
<li>Configures just <em>this individual page</em>, whereas the YAML in <code>_quarto.yml</code> specifies <em>site-wide configurations</em>.</li>
</ul>
<p><br></p>
<p><strong>YAML consists of entries of key-value pairs</strong>: in the example above, <code>title</code> is the key that determines what the document’s title will be, and <code>"Untitled"</code> is the current value.</p>
<p>Valid YAML <strong>keys</strong> are limited to what has been pre-defined by others (i.e., in this case, the developers of Quarto), and the list of possible keys depends on the document type. The Quarto website has <a href="https://quarto.org/docs/reference/projects/websites.html">a full list of valid YAML keys for the <code>_quarto.yml</code> file</a> as well as a <a href="https://quarto.org/docs/reference/formats/html.html">a list for HTML pages</a>, which is the kind of output that your <code>.qmd</code> files will produce when rendered.</p>
<p>Depending on the key, the <strong>value</strong> can be:</p>
<ul>
<li>A “<em>free-form string</em>” of text, like for a title</li>
<li><em>Constrained to a series of possible values</em>, like for the <code>theme</code> key, which can set the overall look of a page to one of a few dozen available “themes”</li>
<li>An <em>on/off switch</em> using <code>true</code>/<code>false</code>, like whether to show a Table of Contents using the <code>toc</code> key.</li>
</ul>
<p><br></p>
<section id="yamls-structure" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="yamls-structure"><span class="header-section-number">2.1</span> YAML’s structure</h3>
<p>YAML’s structure is quite simple, but it does have a few rules. Each entry is generally on its own line. It has a <em>hierarchical structure</em> in that many values can itself be given key-value pairs to specify additional options. For example, see this section from your <code>_quarto.yml</code> file:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cosmo</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">css</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> styles.css</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<ul>
<li><p>Note how the values for <em>keys that simply take a value</em> (above: <code>theme</code>, <code>css</code>, and <code>toc</code>) and have no “child keys” are on the same line as the key.</p></li>
<li><p>In contrast, keys whose values are really “<em>child keys</em>” (above: <code>format</code> and <code>html</code>):</p>
<ul>
<li><p>Are followed by a colon <code>:</code></p></li>
<li><p>Are on a line by themselves</p></li>
<li><p>Have their child keys on the next line(s), <strong>indented</strong> one more level.</p></li>
</ul></li>
<li><p>Indentation in YAML has to use <em>either two or four spaces</em> (no tabs!) per indentation level, and YAML is <em>sensitive to indentation errors</em>. (Note that RStudio will by default insert multiple spaces instead of a true tab when you press the <kbd>Tab</kbd> key, so you can still use that just fine.)</p></li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Site-wide vs.&nbsp;page-specific configuration
</div>
</div>
<div class="callout-body-container callout-body">
<p>This <code>format</code> =&gt; <code>html</code> section in the <code>_quarto.yml</code> file will set defaults for the formatting of individual pages on your website. You can use the same keys (e.g.&nbsp;<code>theme</code>, <code>css</code>, and <code>toc</code> shown above) in the YAML header of your <code>qmd</code> files, which would override these site-wide settings.</p>
</div>
</div>
<p><br></p>
<p>A final component of YAML syntax, with lists of entries, is used in the <code>website</code> section of <code>_quarto.yml</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lucy's adventures in science"</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> index.qmd</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Home</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> about.qmd</span></span></code></pre></div>
<p>Here, each entry (= each page on your website) is preceded by a dash <code>-</code>, and:</p>
<ul>
<li><p>The top entry, for the homepage, has an <code>href</code> key pointing to the relevant file, as well as a <code>text</code> key (<strong>note: same indentation level, no additional dash</strong>) that will set what text is being displayed for this link.</p></li>
<li><p>The bottom entry uses an alternative specification method, with just a pointer to the file. When you do this, the displayed test on the website would be the same as the file name without the <code>.qmd</code> extension, namely “About”.</p></li>
</ul>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
YAML errors (Click to expand)
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>If you made a mistake in the YAML, you will see an ominous-looking box like this pop up:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/yaml_error.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">You’ll see this error if you specified an invalid key in your YAML. Don’t panic! If you don’t already know what’s wrong, carefully read the error which is quite informative.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p><br></p>
</section>
</section>
<section id="modifying-the-yaml-header-of-our-new-page" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="modifying-the-yaml-header-of-our-new-page"><span class="header-section-number">3</span> Modifying the YAML header of our new page</h2>
<p>Let’s start by <strong>changing the page’s title</strong> to <code>title: "My Research"</code>.</p>
<p>Then, we can <strong>add a few new YAML entries</strong> to further populate the “title block” (top part) of your page:</p>
<ul>
<li><p><code>subtitle: "These are my ongoing and past research projects"</code></p></li>
<li><p><code>date: 2023-09-11</code></p></li>
<li><p><code>author: "Lucy T. Hedgehog"</code>, or for multiple authors, use the following syntax:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Lucy T. Hedgehog</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Lucy T. Hedgehog's advisor </span></span></code></pre></div></li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
YAML auto-complete and quoting (Click to expand)
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<ul>
<li>Note that when you type a new entry in the YAML header, RStudio will have an auto-completion feature with information boxes:</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/autocomplete.png" class="img-fluid figure-img" style="width:85.0%"></p>
</figure>
</div>
<ul>
<li>In the examples above, we have <strong>double-quoted</strong> (“…”) free-form YAML values like <code>title</code>. This is optional: as long as your title doesn’t contain any special characters, it would also work without quotes.</li>
</ul>
</div>
</div>
</div>
<p><br></p>
<p>Here are a few of the <a href="https://quarto.org/docs/reference/formats/html.html">many other <strong>possible HTML page YAML keys</strong></a> that are particularly useful:</p>
<ul>
<li><p><code>date-modified</code>: If you wrote a page originally on a certain date, but made some modifications afterwards, you can get a separate date entry for the modifications. Useful for e.g.&nbsp;blog posts and reports.</p></li>
<li><p><code>title-block-banner: true</code>: Put the title block (title and subtitle) in a “banner” by adding a background color.</p></li>
<li><p><code>number-sections: true</code>: Number sections (as determined using headers and their levels) hierarchically.</p></li>
<li><p><code>toc-location</code>: Where the Table of Contents should show up — one of <code>left</code>, <code>right</code> (default), or <code>body</code></p></li>
</ul>
</section>
<section id="exercises-i" class="level2 exercise" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="exercises-i"><span class="header-section-number">4</span> Exercises I</h2>
<section id="experiment-with-yaml-header-options" class="level4 unnumbered">
<h4 class="unnumbered anchored" data-anchor-id="experiment-with-yaml-header-options">Experiment with YAML header options</h4>
<p><br></p>
<p>On your new page:</p>
<ul>
<li><p>Try adding the <code>title-block-banner</code> and see if you like that kind of format.</p></li>
<li><p>Add a few headers of different levels (start with “Header 2”, the title is basically the one level 1 header) — you can do so by clicking the dropdown menu that will say Normal:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/add_headers.png" class="img-fluid figure-img" style="width:75.0%"></p>
</figure>
</div></li>
<li><p>Try turning on <code>number-sections</code> and play around with the <code>toc-location</code> (Your <code>_quarto.yml</code> has an entry <code>toc: true</code>, so a table of contents will by default be shown on very page).</p></li>
</ul>
</section>
</section>
<p><br></p>
<section id="modifying-the-_quarto.yml-file" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="modifying-the-_quarto.yml-file"><span class="header-section-number">5</span> Modifying the <code>_quarto.yml</code> file</h2>
<p>As mentioned above, the <code>_quarto.yml</code> file solely consists of YAML configurations, and these settings apply to the entire website.</p>
<p>The two most important “sections” in this file are:</p>
<ul>
<li><p><code>website</code>, where we can control things like the site’s navigation elements that will show up on every page</p></li>
<li><p><code>format</code> =&gt; <code>html</code>, where we can specify page-level formatting settings. Here, we can use the same YAML keys that we could use in the YAML header of our new page (and any other page), except that the settings will be applied across all pages on the site.</p></li>
</ul>
<p><br></p>
<section id="the-website-section" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="the-website-section"><span class="header-section-number">5.1</span> The <code>website</code> section</h3>
<p>In my example, this section currently reads as follows – yours should be the same except for the title unless you did some customization yourself already:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lucy's adventures in science"</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> index.qmd</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Home</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> about.qmd</span></span></code></pre></div>
<p>The <code>navbar</code> key represents <strong>a navigation bar that is always shown across the top of the site</strong>, which should be a good default for most websites. But if you want a website navigation bar on the side, or combined top and side navigation (the latter is useful for sites with a lot of contents, and is used for example on <a href="https://quarto.org/">Quarto’s own documentation website</a>), this is possible: see <a href="https://quarto.org/docs/websites/website-navigation.html">Quarto’s Website Navigation docs</a>.</p>
<p>Any entries under the <strong><code>left</code> key</strong> will be left-aligned on the navbar, i.e.&nbsp;consecutive entries start on the left-hand side of the navbar, moving rightward with every added entry. We could also add right-aligned entries with a <strong><code>right</code> key</strong> (see the exercise below).</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Navbar auto-collapse (Click to expand)
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>If the width of your viewing window is narrow (like it often is in RStudio’s “Viewer”, as well as on phones), the navbar will be automatically collapsed into a “Hamburger menu:”</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/hamburger_menu.png" class="img-fluid figure-img" style="width:65.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<p><br></p>
<p><strong>If we want our new page to show up in the navbar</strong>, we’ll have to add it as a new entry:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lucy's adventures in science"</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> index.qmd</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Home</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> about.qmd</span></span>
<span id="cb6-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> research.qmd</span></span>
<span id="cb6-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> My Research</span></span></code></pre></div>
<p><br></p>
<p><strong>Some other useful keys for the <code>website</code> section</strong> include (see this <a href="https://quarto.org/docs/reference/projects/websites.html">Quarto docs page</a> for a full list):</p>
<ul>
<li><p><code>back-to-top-navigation</code> (a child key of <code>website</code>): When set to <code>true</code>, this will show a “Back to top” button once you reach the bottom of a page.</p></li>
<li><p><code>favicon</code> (a child key of <code>website</code>): A favicon is an icon or small image that shows up in your browser next to the name of the website, see the icons shown in screenshot:</p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/favicon.png" class="img-fluid figure-img" style="width:65.0%"></p>
</figure>
</div>
<ul>
<li><code>icon</code> (a navbar entry like <code>href</code> and <code>text</code>): This will allow you to show an icon instead of (default for external links) or in addition to text (default for internal links) for a link in your navbar. See <a href="https://icons.getbootstrap.com/">here</a> for a list of available icons. For example:</li>
</ul>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> index.qmd</span></span>
<span id="cb7-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Home</span></span>
<span id="cb7-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> house</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/home_icon.png" class="img-fluid figure-img" style="width:65.0%"></p>
</figure>
</div>
<p><br></p>
</section>
<section id="the-html-format-section" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="the-html-format-section"><span class="header-section-number">5.2</span> The <code>html</code> <code>format</code> section</h3>
<p>Here is what the <code>format</code> section of your <code>_quarto.yaml</code> should look like:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cosmo</span></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">css</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> styles.css</span></span>
<span id="cb8-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>As mentioned before, the configuration done in this section can use the same keys as those in the YAML header for individual pages, but the settings done in <code>_quarto.yaml</code> will apply across the entire website.</p>
<p>For now, we’ll only talk about one key: <strong><code>theme</code></strong>. This will change the overall look of your website to a number of preset themes, each with different fonts and colors. While you can also completely customize your website’s look yourself, using one of these themes should work well for most of us.</p>
<p>You can see a visual list of available themes at <a href="https://bootswatch.com/" class="uri">https://bootswatch.com/</a>. The default theme is <code>cosmo</code>, as you can see above. As an example, if we change Lucie’s website theme to <code>lux</code>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_02/img/lux_theme.png" class="img-fluid figure-img" style="width:65.0%"></p>
</figure>
</div>
<p><br></p>
</section>
</section>
<section id="exercises-ii" class="level2 exercise" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="exercises-ii"><span class="header-section-number">6</span> Exercises II</h2>
<section id="site-wide-configuration" class="level4 unnumbered">
<h4 class="unnumbered anchored" data-anchor-id="site-wide-configuration">Site-wide configuration</h4>
<p><br></p>
<p><strong>Modify your <code>_quarto.yml</code> to configure your website</strong>. You can play around with whatever you prefer, but here are some suggestions:</p>
<ul>
<li><p>Try several different themes and pick one for your website.</p></li>
<li><p>Move the navbar entry for the <code>about.qmd</code> page to the right-hand side.</p></li>
<li><p>Add one more icons to the Navbar, for example:</p>
<ul>
<li>Add a link to your Twitter account and use the <code>twitter</code> icon</li>
<li>If you have one, add a link to your GitHub account and use the <code>github</code> icon</li>
<li>Add e.g.&nbsp;a question mark icon to your About page link (search for one <a href="https://icons.getbootstrap.com">here</a>).</li>
<li>Take a look at the <a href="https://icons.getbootstrap.com">visual list of possible icons</a> and see if there are some that you’d like to use.</li>
</ul></li>
<li><p>Add a favicon for your <code>website</code>.</p></li>
</ul>
</section>
</section>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
RStudio’s visual editor
</div>
</div>
<div class="callout-body-container callout-body">
<p>The visual editor should give you some easy-to-use, Word-processor like options to format the content on your website, add images, and so on — feel free to add some more content to your website!</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Check out the Code Club site source code
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you’re wondering how certain elements or configuration of the Code Club website was done, feel free to look at source code for the Code Club website, which is at: <a href="https://github.com/osu-codeclub/osu-codeclub.github.io" class="uri">https://github.com/osu-codeclub/osu-codeclub.github.io</a>.</p>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>website</category>
  <guid>https://osu-codeclub.github.io/posts/website_02/index.html</guid>
  <pubDate>Mon, 11 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/website_02/img/lux_theme.png" medium="image" type="image/png" height="30" width="144"/>
</item>
<item>
  <title>Quarto website 1: Initiating a website 🌐</title>
  <dc:creator>Jessica Cooperstone</dc:creator>
  <link>https://osu-codeclub.github.io/posts/website_01_initiation/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<section id="introduction" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1</span> Introduction</h2>
<p>We are going to begin this semester’s Code Club with a series on making yourself a website. There are lots of reasons why you might want a website, including to:</p>
<ul>
<li>have a web presence about yourself (so when people google you, they can find your relevant info)</li>
<li>have a blog where you post about whatever it is you want to post about</li>
<li>share your research or data</li>
</ul>
<p>Some of you may already have a simple free or paid website for yourself, that you made through <a href="https://u.osu.edu/">www.u.osu.edu</a>, <a href="https://www.squarespace.com/">Squarespace</a>, or <a href="https://sites.google.com/">Google Sites</a>. These tools don’t require you to be able to code, and allow you to create a website with different levels of customization and interactivity.</p>
<p>For the next few sessions, we are going to go over making a website using <a href="https://quarto.org/">Quarto</a>. Quarto can be used as an open-source publishing system and you can integrate content from Jupyter notebooks, plain text markdown, Python, R, Julia and others. We are going to use Quarto integrated with R.</p>
<blockquote class="blockquote">
<p>Take a look at a <a href="https://quarto.org/docs/gallery/#websites">gallery of Quarto website examples</a>.</p>
</blockquote>
<p>We picked this particular platform to go over in Code Club since its lightweight, customizable, free, and integrates with R which you’re probably learning anyway. I am going to start going through an example that will be my personal website. I picked this example because I thought this might be of interest to most of you.</p>
</section>
<section id="installation" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="installation"><span class="header-section-number">2</span> Installation</h2>
<p>To render your website in RStudio, you will need to have the <em>rmarkdown</em> R package installed. You can do so by typing (or copying) the following into your R Console inside RStudio:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmarkdown"</span>)</span></code></pre></div>
</div>
<p>While not necessary for basic website building inside RStudio, it will also be a good idea to have Quarto installed moving forward. This is not an R package, but is a separate piece of software. To install it, go to <a href="https://quarto.org/docs/get-started/" class="uri">https://quarto.org/docs/get-started/</a> and the correct installer for your operating system should be highlighted in a blue box. Click on that box to download and once downloaded, click on the installer to install Quarto.</p>
<p align="center">
<img style="border:1px solid gray;" src="https://osu-codeclub.github.io/posts/website_01_initiation/img/install_quarto.png" width="75%">
</p><figcaption>
The blue box should highlight the installer for your operating system.
</figcaption>
<p></p>
</section>
<section id="initiating-your-website-project" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="initiating-your-website-project"><span class="header-section-number">3</span> Initiating your website project</h2>
<p>The first step to getting a website is to open up a new project in RStudio.</p>
<p>Start by going to <em>File</em> &gt; <em>New Project</em> &gt; <em>New Directory</em>. When asked which Project Type you want, pick <em>Quarto Website</em>. Note that you can also initiate a <em>Quarto Blog</em> which is a type of <em>Quarto Website</em> - since the website template is simpler we are going to start there, and can change back in the future if you want. If you want to read ahead, here is a nice website about <a href="https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/">making your Quarto website into a blog</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/project-type.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screen shot of the new project wizard - we are picking Quarto Website, or the third from the bottom choice</figcaption>
</figure>
</div>
<p>You will then be asked where you want this website to live in your computer. Under <em>Directory Name</em> pick the name of the folder you want your content to be in, and <em>Create project as subdirectory of</em> as where you want the location on your computer. I have used the Knitr engine for website building.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/create-quarto-website.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screen shot of the new project wizard where we indicate our directory name and where that directory will reside. we use knitr engine to run, and are not creating a git repo, using renv, or using visual markdown editor. we are opening in a new session</figcaption>
</figure>
</div>
<p>I am not creating a <a href="https://www.tutorialspoint.com/what-is-a-git-repository">git repository</a> (since we haven’t gone over that yet, we will add it later after we finish our site), am not using <a href="https://docs.posit.co/ide/user/ide/guide/environments/r/renv.html#:~:text=The%20renv%20package%20helps%20you,its%20own%20private%20package%20library.">renv</a> with this project (which automatically saves your environment), and I am not default using the <a href="https://quarto.org/docs/visual-editor/">visual editor</a> (which let’s you look at your markdown files how they will look when executed) since I want you to get used to looking at markdown. You can always toggle the visual editor later.</p>
<p>Once you do this basically you have all the bones of a website! Congratulations 🥳</p>
</section>
<section id="orienting-to-your-website" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="orienting-to-your-website"><span class="header-section-number">4</span> Orienting to your website</h2>
<p>A new RStudio window should have opened (since we checked the box in the previous step <em>Open in new session</em>) that has your new R project opened.</p>
<p>We now see the four quadrants of RStudio:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/orienting.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of four quadrants of rstudio</figcaption>
</figure>
</div>
<ul>
<li>the top left where the two website files <code>index.qmd</code> and <code>_quarto.yml</code> are open</li>
<li>the bottom left where we see the console</li>
<li>the top right where we see the tabs: Environment (which is currently empty), History (which we won’t use), Connections (which we won’t use), Tutorial (which we won’t use), and a new one Build (which is how we render our site)</li>
<li>the bottom right where we see Files (which houses the new files that populate our website), Plots (which you’ve seen before and where plots can be rendered if you don’t like them inline), Packages (which shows all the packages loaded in your R), Help (which you’ve seen before, and where you can get help), Viewer (a new one where we can see a preview rendering of our website), and Presentation (where we can see a preview rendering a presentation but we aren’t doing that right now).</li>
</ul>
</section>
<section id="building-your-site" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="building-your-site"><span class="header-section-number">5</span> Building your site</h2>
<p>Let’s see what our website looks like before we’ve done anything. If you go to the Build tab in the top right quadrant and click <em>Render Website</em> your site will render and show up in the Viewer in the bottom right.</p>
</section>
<section id="looking-around" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="looking-around"><span class="header-section-number">6</span> Looking around</h2>
<p>You can now click around in your new and very unexciting website. Let’s look around and then we will go through the file structure to see how the two are related.</p>
<p>Along the top, or if you click the three lines in the top right (depending on the size of your browser page) you can see by default we get a Home and About page. If we click ‘website’ at the top, we go back to Home. We also have a search bar that allows us to search on our site.</p>
<p>Now that we know what information we see on our site, we can look at the files that are used to build the site and try and interpret them.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/files.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the files generated by creating our skeleton website in the bottom right quadrant</figcaption>
</figure>
</div>
<p>Before we open the files, let’s talk about the file extensions and what they mean:</p>
<ul>
<li><code>.yml</code> is a <a href="https://quarto.org/docs/projects/quarto-projects.html#shared-metadata">YAML</a> or the file that indicates how the website will be configured</li>
<li><code>.qmd</code> is a <a href="https://quarto.org/docs/get-started/hello/rstudio.html">Quarto markdown document</a>, and if you’re familiar with RMarkdown <code>.Rmd</code> documents its very similar. It contains both text written in markdown and executable code.</li>
<li><code>.css</code> is a <a href="https://www.w3schools.com/css/css_intro.asp#:~:text=CSS%20stands%20for%20Cascading%20Style,are%20stored%20in%20CSS%20files">Cascading Style Sheets</a> file that indicates the way to style an HTML document (i.e., your website)</li>
<li><code>.Rproj</code> is a <a href="https://bookdown.org/ndphillips/YaRrr/projects-in-rstudio.html">R Project</a> file that designates your working directory</li>
</ul>
<p>We also have a folder <code>_site</code> which houses the knitted website files. More about this later.</p>
</section>
<section id="index.qmd" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="index.qmd"><span class="header-section-number">7</span> index.qmd</h2>
<p>This <code>index.qmd</code> file indicates what the home page of the site will look like.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/index.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the index.qmd file</figcaption>
</figure>
</div>
<p>Intuitively we can compare this file to what the homepage of the website looks like. You can try editing this website, saving, and then click Render and see how this changes what the site looks like in the Viewer (bottom right quadrant). You can check Render on Save so that whenever you save, the file automatically renders.</p>
<p>Play around with adding text, code, headers, images, whatever you might want on your website homepage.</p>
</section>
<section id="about.qmd" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="about.qmd"><span class="header-section-number">8</span> about.qmd</h2>
<p>This <code>about.qmd</code> file indicates what the about page of the site will look like.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/about.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the about.qmd file</figcaption>
</figure>
</div>
<p>Just like with the <code>index.qmd</code> file, you can play around with this page.</p>
</section>
<section id="quarto.yml" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="quarto.yml"><span class="header-section-number">9</span> _quarto.yml</h2>
<p>The YAML file indicates how the site should be configured.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://osu-codeclub.github.io/posts/website_01_initiation/img/yaml.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">a screenshot of the _quarto.yml file</figcaption>
</figure>
</div>
<p>You’re probably not familiar with these <code>.yml</code> files but still its not horribly difficult to figure out what the different bits do.</p>
<p>At the top, project type is indicated as website. We don’t want to change that now.</p>
<p>In the next section beginning at line 4, we can have some specific information for how the website populates. The title is listed as “website” - we can change that to what we want at the top of our website. There is also a specification for what are the items in your navitation bar - here we have that the Home text will link to the <code>index.qmd</code>, and the next link is <code>about.qmd</code>. You can make more .qmd files that have other information and refer to them here and they will also populate in your navigation bar.</p>
<p>In the third section at line 12, we can see some information on the setting of the website format. We have a html site, the theme is something called “cosmo” (see <a href="https://quarto.org/docs/output-formats/html-themes.html">here</a> for some other options), we are using the styles.css file for css theming (actually that file is currently blank but thats ok), and we are indicating toc (or table of contents) as true, therefore we have a table of contents.</p>
<p>Here you can find some <a href="https://quarto.org/docs/reference/projects/websites.html#section">documentation</a> about all the different stuff you can put in your YAML for a website.</p>
</section>
<section id="playing-around" class="level2" data-number="10">
<h2 data-number="10" class="anchored" data-anchor-id="playing-around"><span class="header-section-number">10</span> Playing around</h2>
<p>Now that we have a general understanding of whats in our site, try playing around to begin customization to be how you want. We will do this for the rest of the session and please ask any questions on problems you come across, or share cool things you find!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>website</category>
  <guid>https://osu-codeclub.github.io/posts/website_01_initiation/index.html</guid>
  <pubDate>Mon, 28 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="https://osu-codeclub.github.io/posts/website_01_initiation/img/create-quarto-website.png" medium="image" type="image/png" height="104" width="144"/>
</item>
<item>
  <title>Welcome to the new Code Club website!</title>
  <dc:creator>Jelmer Poelstra</dc:creator>
  <dc:creator>Jessica Cooperstone</dc:creator>
  <dc:creator>Horacio Lopez-Nicora</dc:creator>
  <link>https://osu-codeclub.github.io/posts/welcome/index.html</link>
  <description><![CDATA[ 



<hr>
<p><br></p>
<p>Code Club has a new website, made with Quarto!</p>
<p>We were previously on the <a href="https://biodash.github.io">“BioDASH” website</a>, which also contained some educational bioinformatics material unrelated to Code Club.</p>
<p>That website was created using R Markdown and “<a href="https://gohugo.io/">Hugo</a>”. A lot has happened in the realm of R Markdown websites in the meantime, and even R Markdown itself now has a successor: <a href="https://quarto.org/">Quarto</a>.</p>
<p>In the AU23 semester, we will teach making a website with Quarto, and we therefore think it is fitting that the Code Club website itself is also made with Quarto. Additionally, we think it will be nice to have a website just for Code Club content.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>news</category>
  <guid>https://osu-codeclub.github.io/posts/welcome/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
