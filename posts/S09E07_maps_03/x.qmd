---
title: "Making maps in R: part III"
subtitle: "Choropleth maps"
pagetitle: "Maps III"
author: "Jelmer Poelstra"
date: "2025-02-24"
categories: [maps]
title-block-banner: false
number-depth: 2
execute: 
  eval: false
  cache: false
knitr:
  opts_chunk:
    out.width: "85%"
editor_options: 
  chunk_output_type: console
---

------------------------------------------------------------------------

## Introduction

### Setting up

We will also use some data sets from the _usdata_ (as in: US data) package,
so go ahead and install that:

```{r, eval=FALSE}
install.packages("usdata")
```

```{r}
library(usdata)
```

We'll set a ggplot theme for all the following plots:

```{r}
theme_set(theme_void())
theme_update(legend.position = "top")
```

Grab out state and county map data:

```{r}
states <- map_data(map = "state")
ohio <- map_data(map = "county") |>
  filter(region == "ohio")
```

<br>

## A first choropleth map

In choropleth maps, the color of a geographic area differs based on some variable,
like population density, median income, mean temperature, or biodiversity.
In ggplot-speak, we would be mapping the `fill` aesthetic to a variable like
population density.

```{r}
states |>
  filter(region %in% c("ohio", "indiana", "michigan")) |> 
  ggplot() +
  geom_polygon(
    aes(x = long, y = lat, group = group, fill = region),
    color = "grey40"
    ) +
  coord_sf()
```

<hr style="height:1pt; visibility:hidden;" />

## Statewise

```{r}
state_stats
```

```{r}
states_with_stats <- tibble(states) |>
  mutate(state = tools::toTitleCase(region)) |> 
  left_join(state_stats, by = "state")
```

```{r}
ggplot() +
  geom_polygon(
    data = states_with_stats,
    aes(x = long, y = lat, group = group, fill = med_income / 1000),
    color = "black", linewidth = 0.1,
  ) +
  coord_sf(crs = 5070, default_crs = 4326) +
  scale_fill_viridis_c(name = "Median income\n(thousands) ")
```

```{r}
ggplot() +
  geom_polygon(
    data = states_with_stats,
    aes(x = long, y = lat, group = group, fill = unempl),
    color = "black", linewidth = 0.1,
  ) +
  coord_sf(crs = 5070, default_crs = 4326) +
  scale_fill_viridis_c("Unemployment (%)")
```

## Countywise

```{r}
county
```

```{r}
ohio_data <- county |>
  filter(state == "Ohio") |>
  rename(county = name) |> 
  mutate(county = sub(" County", "", county))
```

```{r}
ohio_map <- tibble(ohio) |>
  rename(county = subregion) |>
  mutate(county = tools::toTitleCase(county))
```

```{r}
unique(ohio_map$county) %in% ohio_data$county
```

```{r}
all(unique(ohio_map$county) %in% ohio_data$county)
all(ohio_data$county %in% unique(ohio_map$county))
```

```{r}
ohio_mapdata <- left_join(ohio_map, ohio_data, by = "county")
ohio_mapdata
```

```{r}
ggplot() +
  geom_polygon(
    data = ohio_mapdata,
    aes(x = long, y = lat, group = group, fill = metro),
    color = "black", linewidth = 0.1,
  ) +
  coord_sf()
```

```{r}
ggplot() +
  geom_polygon(
    data = ohio_mapdata,
    aes(x = long, y = lat, group = group, fill = pop2000 / 100000),
    color = "black", linewidth = 0.1,
  ) +
  scale_fill_viridis_c(name = "Population\n(in 100 k)") +
  coord_sf()
```

```{r}
ggplot() +
  geom_polygon(
    data = ohio_mapdata,
    aes(x = long, y = lat, group = group, fill = pop_change),
    color = "black", linewidth = 0.1,
  ) +
  scale_fill_viridis_c(name = "Population size change") +
  coord_sf()
```

```{r}
ggplot() +
  geom_polygon(
    data = ohio_mapdata,
    aes(x = long, y = lat, group = group, fill = median_hh_income / 1000),
    color = "black", linewidth = 0.1,
  ) +
  scale_fill_viridis_c(name = "Median household\nincome (in 1000s)") +
  coord_sf()
```

## ggmap

```{r, eval=FALSE}
# ?ggmap::register_stadiamaps
# https://docs.stadiamaps.com/authentication/#api-keys
api_key <- "XXX"
register_stadiamaps(api_key, write = TRUE)
```

```{r}
library(ggmap)

us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
get_stadiamap(bbox = us, zoom = 5, maptype = "outdoors") |> ggmap() 

bbox_ohio <- c(left = -85, bottom = 38.3, right = -80.5, top = 42.2)
get_stadiamap(bbox = bbox_ohio, zoom = 8, maptype = "outdoors") |> ggmap() 
get_stadiamap(bbox = bbox_ohio, zoom = 8, maptype = "stamen_toner_lite") |> ggmap() 
```

## Interactive maps

```{r}
# See https://r-graph-gallery.com/414-map-multiple-charts-in-ggiraph.html
library(ggiraph)
```

```{r}
p <- states |>
  filter(region %in% c("ohio", "indiana", "michigan")) |> 
  ggplot() +
  geom_polygon_interactive(
    aes(x = long, y = lat, group = group, fill = region, tooltip = region),
    color = "grey40"
    ) +
  coord_sf()
girafe(ggobj = p)
```

## Interactive, zoomable maps

```{r}
library(mapview)
```

```{r}
#https://rkabacoff.github.io/datavis/Maps.html
homicide <- crime |>
  filter(offense == "murder") |>
  select(date, offense, address, lon, lat)
```

```{r}
mymap <- st_as_sf(homicide, coords = c("lon", "lat"), crs = 4326)
mapview(mymap)
```

```{r}
mapview(
  mymap,
  color = "black",
  col.regions = "darkblue",
  alpha.regions = 0.5,
  legend = FALSE,
  homebutton = FALSE,
  map.types = "OpenStreetMap"
  )
```

```{r}
ohio_cities_sf <- st_as_sf(oh_cities, coords = c("long", "lat"), crs = 4326)
mapview(ohio_cities_sf)
```

```{r}
locations_sf <- st_as_sf(locations, coords = c("long", "lat"), crs = 4326)
mapview(locations_sf)
```

