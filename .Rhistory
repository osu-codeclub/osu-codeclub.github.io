mtcars
iris
install.packages("quarto")
usethis::use_git_config(user.name = "Horacio", user.email = "lopeznicora1@gmail.com")
install.packages("usethis")
usethis::use_git_config(user.name = "Horacio", user.email = "lopeznicora1@gmail.com")
usethis::create_github_token()
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
credentials::set_github_pat("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")
library(usethis)
usethis::git_sitrep()
#| eval: false
library (shiny)
ui<- fluidPage(
# *Input () functions
# *Output () functions
# *Layout () functions
)
server<- function(input, output){
# render * () functions with R expressions inside
# reactive () expressions
}
shinyApp (ui=ui, server=server)
1 + 1
#| eval: false
1 + 1
#| class-output: hscroll
1 + 1
1 + 1
#| eval: false
library (shiny)
ui<- fluidPage(
# *Input () functions
# *Output () functions
# *Layout () functions
)
server<- function(input, output){
# render * () functions with R expressions inside
# reactive () expressions
}
shinyApp (ui=ui, server=server)
#| class-output: hscroll
4. Let's run our Shiny App!
ui <- fluidPage(
titlePanel(title = "Horacio's first app"),
sidebarLayout(
sidebarPanel("This is sidebar panel"),
mainPanel("This is the main panel, where output is displayed")
)
)
server <- shinyServer(
function(input,output){
}
)
#| eval: false
shinyApp (ui=ui, server=server)
#| eval: false
#1. Load your library, always.
library(shiny)
#2. Let’s fill some of the sections
ui<-fluidPage(
titlePanel(title = "Horacio's First Shiny App"),
sidebarLayout(position = "right",
sidebarPanel(h3("This is sidebar panel."),h4("Widget4"), h5("Widget5")),
mainPanel(h4("This is the main panel, where output is displayed"),
h5("This is the output 5"))
)
)
#3. We have no input, so, we just need the basic server function
server<-shinyServer(
function(input,output){
}
)
#4. Let’s run the app
shinyApp (ui=ui, server=server)
#| eval: false
#1. Load your library, always.
library(shiny)
#2. Let’s fill some of the sections
ui<-fluidPage(
titlePanel(title = "Horacio's First Shiny App"),
sidebarLayout(position = "right",
sidebarPanel(h3("This is sidebar panel."), h4("Notice the sidebar is displayed on the right."), h5("But looked better on the left side.")),
mainPanel(h4("This is the main panel, where output is displayed"),
h5("This is additional explanation about the output"))
)
)
#3. We have no input, so, we just need the basic server function
server<-shinyServer(
function(input,output){
}
)
#4. Let’s run the app
shinyApp (ui=ui, server=server)
#| eval: false
library(shiny)
ui<- fluidPage(
titlePanel("This is my First Shiny App"),
sidebarLayout(
sidebarPanel(
textInput("name", "Enter your name"),
textInput("email", "Enter your email"),
selectInput("country", "Select the country you live in", choices = c("Australia", "Germany", "India", "Paraguay", "UK", "USA"))
),
mainPanel(
paste("Your details"),
textOutput("name"),
textOutput("email"),
textOutput("country")
)
)
)
server<- shinyServer(function(input, output){
output$name<- renderText({
paste(input$name)
})
output$email<-renderText({
paste(input$email)
})
output$country<-renderText({
paste(input$country)
})
})
shinyApp(ui=ui, server = server)
#| eval: false
library(shiny)
ui<- fluidPage(
titlePanel("This is my First Shiny App"),
sidebarLayout(
sidebarPanel(
textInput("name", "Enter your first and last name"),
textInput("email", "Enter your email"),
selectInput("country", "Select the country you live in", choices = c("Australia", "Germany", "India", "Paraguay", "UK", "USA"))
),
mainPanel(
paste("Your contact information"),
textOutput("name"),
textOutput("email"),
textOutput("country")
)
)
)
server<- shinyServer(function(input, output){
output$name<- renderText({
paste(input$name)
})
output$email<-renderText({
paste(input$email)
})
output$country<-renderText({
paste(input$country)
})
})
shinyApp(ui=ui, server = server)
#| eval: false
library(shiny)
ui<- fluidPage(
titlePanel("This is my First Shiny App"),
sidebarLayout(
sidebarPanel(
textInput("name", "Enter your first and last name"),
textInput("email", "Enter your email"),
selectInput("country", "Select the country you live in", choices = c("", "Australia", "Germany", "India", "Paraguay", "UK", "USA"))
),
mainPanel(
paste("Your contact information"),
textOutput("name"),
textOutput("email"),
textOutput("country")
)
)
)
server<- shinyServer(function(input, output){
output$name<- renderText({
paste(input$name)
})
output$email<-renderText({
paste(input$email)
})
output$country<-renderText({
paste(input$country)
})
})
shinyApp(ui=ui, server = server)
